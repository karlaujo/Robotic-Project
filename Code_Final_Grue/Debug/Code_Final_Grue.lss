
Code_Final_Grue.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800100  00001680  00001714  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001680  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000215  00800170  00800170  00001784  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001784  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001810  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002804  00000000  00000000  00001a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f29  00000000  00000000  00004294  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000170e  00000000  00000000  000051bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000668  00000000  00000000  000068cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b55  00000000  00000000  00006f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000181a  00000000  00000000  00007a89  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000220  00000000  00000000  000092a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 00 	jmp	0x106	; 0x106 <__ctors_end>
       4:	0c 94 22 03 	jmp	0x644	; 0x644 <__vector_1>
       8:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
       c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      10:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      14:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      18:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      1c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      20:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      24:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      28:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      2c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      30:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      34:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      38:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      3c:	0c 94 71 03 	jmp	0x6e2	; 0x6e2 <__vector_15>
      40:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      44:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      48:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      4c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      50:	0c 94 b9 06 	jmp	0xd72	; 0xd72 <__vector_20>
      54:	0c 94 88 06 	jmp	0xd10	; 0xd10 <__vector_21>
      58:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      5c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      60:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      64:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      68:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      6c:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      70:	0c 94 12 07 	jmp	0xe24	; 0xe24 <__vector_28>
      74:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__vector_29>
      78:	0c 94 a0 00 	jmp	0x140	; 0x140 <__bad_interrupt>
      7c:	48 02       	muls	r20, r24
      7e:	48 02       	muls	r20, r24
      80:	48 02       	muls	r20, r24
      82:	48 02       	muls	r20, r24
      84:	48 02       	muls	r20, r24
      86:	46 02       	muls	r20, r22
      88:	46 02       	muls	r20, r22
      8a:	30 02       	muls	r19, r16
      8c:	32 02       	muls	r19, r18
      8e:	32 02       	muls	r19, r18
      90:	32 02       	muls	r19, r18
      92:	32 02       	muls	r19, r18
      94:	34 02       	muls	r19, r20
      96:	34 02       	muls	r19, r20
      98:	34 02       	muls	r19, r20
      9a:	34 02       	muls	r19, r20
      9c:	46 02       	muls	r20, r22
      9e:	46 02       	muls	r20, r22
      a0:	36 02       	muls	r19, r22
      a2:	36 02       	muls	r19, r22
      a4:	36 02       	muls	r19, r22
      a6:	36 02       	muls	r19, r22
      a8:	36 02       	muls	r19, r22
      aa:	46 02       	muls	r20, r22
      ac:	46 02       	muls	r20, r22
      ae:	38 02       	muls	r19, r24
      b0:	38 02       	muls	r19, r24
      b2:	38 02       	muls	r19, r24
      b4:	38 02       	muls	r19, r24
      b6:	46 02       	muls	r20, r22
      b8:	46 02       	muls	r20, r22
      ba:	46 02       	muls	r20, r22
      bc:	3a 02       	muls	r19, r26
      be:	3a 02       	muls	r19, r26
      c0:	3a 02       	muls	r19, r26
      c2:	3a 02       	muls	r19, r26
      c4:	3a 02       	muls	r19, r26
      c6:	46 02       	muls	r20, r22
      c8:	46 02       	muls	r20, r22
      ca:	3c 02       	muls	r19, r28
      cc:	3e 02       	muls	r19, r30
      ce:	3e 02       	muls	r19, r30
      d0:	3e 02       	muls	r19, r30
      d2:	3e 02       	muls	r19, r30
      d4:	40 02       	muls	r20, r16
      d6:	40 02       	muls	r20, r16
      d8:	40 02       	muls	r20, r16
      da:	40 02       	muls	r20, r16
      dc:	46 02       	muls	r20, r22
      de:	46 02       	muls	r20, r22
      e0:	42 02       	muls	r20, r18
      e2:	42 02       	muls	r20, r18
      e4:	42 02       	muls	r20, r18
      e6:	42 02       	muls	r20, r18
      e8:	42 02       	muls	r20, r18
      ea:	46 02       	muls	r20, r22
      ec:	46 02       	muls	r20, r22
      ee:	44 02       	muls	r20, r20
      f0:	44 02       	muls	r20, r20
      f2:	44 02       	muls	r20, r20
      f4:	44 02       	muls	r20, r20
      f6:	9b 02       	muls	r25, r27
      f8:	9f 02       	muls	r25, r31
      fa:	a3 02       	muls	r26, r19
      fc:	b2 02       	muls	r27, r18
      fe:	c1 02       	muls	r28, r17
     100:	c7 02       	muls	r28, r23
     102:	cd 02       	muls	r28, r29
     104:	d3 02       	muls	r29, r19

00000106 <__ctors_end>:
     106:	11 24       	eor	r1, r1
     108:	1f be       	out	0x3f, r1	; 63
     10a:	cf ef       	ldi	r28, 0xFF	; 255
     10c:	d8 e0       	ldi	r29, 0x08	; 8
     10e:	de bf       	out	0x3e, r29	; 62
     110:	cd bf       	out	0x3d, r28	; 61

00000112 <__do_copy_data>:
     112:	11 e0       	ldi	r17, 0x01	; 1
     114:	a0 e0       	ldi	r26, 0x00	; 0
     116:	b1 e0       	ldi	r27, 0x01	; 1
     118:	e0 e8       	ldi	r30, 0x80	; 128
     11a:	f6 e1       	ldi	r31, 0x16	; 22
     11c:	02 c0       	rjmp	.+4      	; 0x122 <__do_copy_data+0x10>
     11e:	05 90       	lpm	r0, Z+
     120:	0d 92       	st	X+, r0
     122:	a0 37       	cpi	r26, 0x70	; 112
     124:	b1 07       	cpc	r27, r17
     126:	d9 f7       	brne	.-10     	; 0x11e <__do_copy_data+0xc>

00000128 <__do_clear_bss>:
     128:	23 e0       	ldi	r18, 0x03	; 3
     12a:	a0 e7       	ldi	r26, 0x70	; 112
     12c:	b1 e0       	ldi	r27, 0x01	; 1
     12e:	01 c0       	rjmp	.+2      	; 0x132 <.do_clear_bss_start>

00000130 <.do_clear_bss_loop>:
     130:	1d 92       	st	X+, r1

00000132 <.do_clear_bss_start>:
     132:	a5 38       	cpi	r26, 0x85	; 133
     134:	b2 07       	cpc	r27, r18
     136:	e1 f7       	brne	.-8      	; 0x130 <.do_clear_bss_loop>
     138:	0e 94 9a 03 	call	0x734	; 0x734 <main>
     13c:	0c 94 3e 0b 	jmp	0x167c	; 0x167c <_exit>

00000140 <__bad_interrupt>:
     140:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000144 <adc_init>:
	TCCR2B=clear_bit(TCCR2B,CS10);
}

void pwm2_set_PD7(uint8_t limit){
	// Fixer le rapport cyclique Ã  la valeur de duty
	OCR2A = limit;
     144:	08 98       	cbi	0x01, 0	; 1
     146:	09 98       	cbi	0x01, 1	; 1
     148:	0a 98       	cbi	0x01, 2	; 1
     14a:	ec e7       	ldi	r30, 0x7C	; 124
     14c:	f0 e0       	ldi	r31, 0x00	; 0
     14e:	80 81       	ld	r24, Z
     150:	8f 77       	andi	r24, 0x7F	; 127
     152:	80 83       	st	Z, r24
     154:	80 81       	ld	r24, Z
     156:	80 64       	ori	r24, 0x40	; 64
     158:	80 83       	st	Z, r24
     15a:	80 81       	ld	r24, Z
     15c:	80 62       	ori	r24, 0x20	; 32
     15e:	80 83       	st	Z, r24
     160:	ea e7       	ldi	r30, 0x7A	; 122
     162:	f0 e0       	ldi	r31, 0x00	; 0
     164:	80 81       	ld	r24, Z
     166:	84 60       	ori	r24, 0x04	; 4
     168:	80 83       	st	Z, r24
     16a:	80 81       	ld	r24, Z
     16c:	82 60       	ori	r24, 0x02	; 2
     16e:	80 83       	st	Z, r24
     170:	80 81       	ld	r24, Z
     172:	81 60       	ori	r24, 0x01	; 1
     174:	80 83       	st	Z, r24
     176:	80 81       	ld	r24, Z
     178:	80 68       	ori	r24, 0x80	; 128
     17a:	80 83       	st	Z, r24
     17c:	08 95       	ret

0000017e <pwm0_init>:
     17e:	23 9a       	sbi	0x04, 3	; 4
     180:	24 9a       	sbi	0x04, 4	; 4
     182:	84 b5       	in	r24, 0x24	; 36
     184:	80 6a       	ori	r24, 0xA0	; 160
     186:	84 bd       	out	0x24, r24	; 36
     188:	84 b5       	in	r24, 0x24	; 36
     18a:	8f 7a       	andi	r24, 0xAF	; 175
     18c:	84 bd       	out	0x24, r24	; 36
     18e:	84 b5       	in	r24, 0x24	; 36
     190:	81 60       	ori	r24, 0x01	; 1
     192:	84 bd       	out	0x24, r24	; 36
     194:	84 b5       	in	r24, 0x24	; 36
     196:	8d 7f       	andi	r24, 0xFD	; 253
     198:	84 bd       	out	0x24, r24	; 36
     19a:	16 bc       	out	0x26, r1	; 38
     19c:	85 b5       	in	r24, 0x25	; 37
     19e:	81 60       	ori	r24, 0x01	; 1
     1a0:	85 bd       	out	0x25, r24	; 37
     1a2:	85 b5       	in	r24, 0x25	; 37
     1a4:	89 7f       	andi	r24, 0xF9	; 249
     1a6:	85 bd       	out	0x25, r24	; 37
     1a8:	08 95       	ret

000001aa <pwm0_set_PB3>:
     1aa:	87 bd       	out	0x27, r24	; 39
     1ac:	08 95       	ret

000001ae <pwm0_set_PB4>:
     1ae:	88 bd       	out	0x28, r24	; 40
     1b0:	08 95       	ret

000001b2 <pwm1_init>:
     1b2:	9c 01       	movw	r18, r24
     1b4:	54 9a       	sbi	0x0a, 4	; 10
     1b6:	55 9a       	sbi	0x0a, 5	; 10
     1b8:	e0 e8       	ldi	r30, 0x80	; 128
     1ba:	f0 e0       	ldi	r31, 0x00	; 0
     1bc:	80 81       	ld	r24, Z
     1be:	80 68       	ori	r24, 0x80	; 128
     1c0:	80 83       	st	Z, r24
     1c2:	80 81       	ld	r24, Z
     1c4:	8f 7b       	andi	r24, 0xBF	; 191
     1c6:	80 83       	st	Z, r24
     1c8:	90 81       	ld	r25, Z
     1ca:	90 62       	ori	r25, 0x20	; 32
     1cc:	90 83       	st	Z, r25
     1ce:	90 81       	ld	r25, Z
     1d0:	9f 7e       	andi	r25, 0xEF	; 239
     1d2:	90 83       	st	Z, r25
     1d4:	a1 e8       	ldi	r26, 0x81	; 129
     1d6:	b0 e0       	ldi	r27, 0x00	; 0
     1d8:	9c 91       	ld	r25, X
     1da:	90 61       	ori	r25, 0x10	; 16
     1dc:	9c 93       	st	X, r25
     1de:	9c 91       	ld	r25, X
     1e0:	98 60       	ori	r25, 0x08	; 8
     1e2:	9c 93       	st	X, r25
     1e4:	90 81       	ld	r25, Z
     1e6:	92 60       	ori	r25, 0x02	; 2
     1e8:	90 83       	st	Z, r25
     1ea:	90 81       	ld	r25, Z
     1ec:	9e 7f       	andi	r25, 0xFE	; 254
     1ee:	90 83       	st	Z, r25
     1f0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     1f4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     1f8:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
     1fc:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
     200:	8c 91       	ld	r24, X
     202:	8b 7f       	andi	r24, 0xFB	; 251
     204:	8c 93       	st	X, r24
     206:	8c 91       	ld	r24, X
     208:	82 60       	ori	r24, 0x02	; 2
     20a:	8c 93       	st	X, r24
     20c:	8c 91       	ld	r24, X
     20e:	8e 7f       	andi	r24, 0xFE	; 254
     210:	8c 93       	st	X, r24
     212:	ef e6       	ldi	r30, 0x6F	; 111
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	80 81       	ld	r24, Z
     218:	81 60       	ori	r24, 0x01	; 1
     21a:	80 83       	st	Z, r24
     21c:	08 95       	ret

0000021e <pwm1_set_PD5>:
     21e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     222:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     226:	08 95       	ret

00000228 <pwm1_set_PD4>:
     228:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     22c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
     230:	08 95       	ret

00000232 <pwm2_init>:
     232:	56 9a       	sbi	0x0a, 6	; 10
     234:	57 9a       	sbi	0x0a, 7	; 10
     236:	e0 eb       	ldi	r30, 0xB0	; 176
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	80 68       	ori	r24, 0x80	; 128
     23e:	80 83       	st	Z, r24
     240:	80 81       	ld	r24, Z
     242:	8f 7b       	andi	r24, 0xBF	; 191
     244:	80 83       	st	Z, r24
     246:	80 81       	ld	r24, Z
     248:	80 62       	ori	r24, 0x20	; 32
     24a:	80 83       	st	Z, r24
     24c:	80 81       	ld	r24, Z
     24e:	8f 7e       	andi	r24, 0xEF	; 239
     250:	80 83       	st	Z, r24
     252:	80 81       	ld	r24, Z
     254:	81 60       	ori	r24, 0x01	; 1
     256:	80 83       	st	Z, r24
     258:	80 81       	ld	r24, Z
     25a:	8d 7f       	andi	r24, 0xFD	; 253
     25c:	80 83       	st	Z, r24
     25e:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
     262:	e1 eb       	ldi	r30, 0xB1	; 177
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	80 81       	ld	r24, Z
     268:	8b 7f       	andi	r24, 0xFB	; 251
     26a:	80 83       	st	Z, r24
     26c:	80 81       	ld	r24, Z
     26e:	82 60       	ori	r24, 0x02	; 2
     270:	80 83       	st	Z, r24
     272:	80 81       	ld	r24, Z
     274:	8e 7f       	andi	r24, 0xFE	; 254
     276:	80 83       	st	Z, r24
     278:	08 95       	ret

0000027a <pwm2_set_PD6>:
}

void pwm2_set_PD6(uint8_t limit){
	// Fixer le rapport cyclique Ã  la valeur de duty
	OCR2B = limit;
     27a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__DATA_REGION_ORIGIN__+0x54>
     27e:	08 95       	ret

00000280 <fifo_init>:
     280:	fc 01       	movw	r30, r24
     282:	71 83       	std	Z+1, r23	; 0x01
     284:	60 83       	st	Z, r22
     286:	42 83       	std	Z+2, r20	; 0x02
     288:	13 82       	std	Z+3, r1	; 0x03
     28a:	14 82       	std	Z+4, r1	; 0x04
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	85 83       	std	Z+5, r24	; 0x05
     290:	16 82       	std	Z+6, r1	; 0x06
     292:	17 82       	std	Z+7, r1	; 0x07
     294:	08 95       	ret

00000296 <fifo_push>:
     296:	fc 01       	movw	r30, r24
     298:	86 81       	ldd	r24, Z+6	; 0x06
     29a:	81 11       	cpse	r24, r1
     29c:	1f c0       	rjmp	.+62     	; 0x2dc <fifo_push+0x46>
     29e:	83 81       	ldd	r24, Z+3	; 0x03
     2a0:	a0 81       	ld	r26, Z
     2a2:	b1 81       	ldd	r27, Z+1	; 0x01
     2a4:	a8 0f       	add	r26, r24
     2a6:	b1 1d       	adc	r27, r1
     2a8:	6c 93       	st	X, r22
     2aa:	15 82       	std	Z+5, r1	; 0x05
     2ac:	23 81       	ldd	r18, Z+3	; 0x03
     2ae:	42 2f       	mov	r20, r18
     2b0:	50 e0       	ldi	r21, 0x00	; 0
     2b2:	82 81       	ldd	r24, Z+2	; 0x02
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	01 97       	sbiw	r24, 0x01	; 1
     2b8:	48 17       	cp	r20, r24
     2ba:	59 07       	cpc	r21, r25
     2bc:	11 f4       	brne	.+4      	; 0x2c2 <fifo_push+0x2c>
     2be:	13 82       	std	Z+3, r1	; 0x03
     2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <fifo_push+0x30>
     2c2:	2f 5f       	subi	r18, 0xFF	; 255
     2c4:	23 83       	std	Z+3, r18	; 0x03
     2c6:	6a 30       	cpi	r22, 0x0A	; 10
     2c8:	19 f4       	brne	.+6      	; 0x2d0 <fifo_push+0x3a>
     2ca:	87 81       	ldd	r24, Z+7	; 0x07
     2cc:	8f 5f       	subi	r24, 0xFF	; 255
     2ce:	87 83       	std	Z+7, r24	; 0x07
     2d0:	93 81       	ldd	r25, Z+3	; 0x03
     2d2:	84 81       	ldd	r24, Z+4	; 0x04
     2d4:	98 13       	cpse	r25, r24
     2d6:	02 c0       	rjmp	.+4      	; 0x2dc <fifo_push+0x46>
     2d8:	81 e0       	ldi	r24, 0x01	; 1
     2da:	86 83       	std	Z+6, r24	; 0x06
     2dc:	08 95       	ret

000002de <fifo_pop>:
     2de:	fc 01       	movw	r30, r24
     2e0:	85 81       	ldd	r24, Z+5	; 0x05
     2e2:	81 11       	cpse	r24, r1
     2e4:	20 c0       	rjmp	.+64     	; 0x326 <fifo_pop+0x48>
     2e6:	94 81       	ldd	r25, Z+4	; 0x04
     2e8:	49 2f       	mov	r20, r25
     2ea:	50 e0       	ldi	r21, 0x00	; 0
     2ec:	a0 81       	ld	r26, Z
     2ee:	b1 81       	ldd	r27, Z+1	; 0x01
     2f0:	a4 0f       	add	r26, r20
     2f2:	b5 1f       	adc	r27, r21
     2f4:	8c 91       	ld	r24, X
     2f6:	16 82       	std	Z+6, r1	; 0x06
     2f8:	22 81       	ldd	r18, Z+2	; 0x02
     2fa:	30 e0       	ldi	r19, 0x00	; 0
     2fc:	21 50       	subi	r18, 0x01	; 1
     2fe:	31 09       	sbc	r19, r1
     300:	42 17       	cp	r20, r18
     302:	53 07       	cpc	r21, r19
     304:	11 f4       	brne	.+4      	; 0x30a <fifo_pop+0x2c>
     306:	14 82       	std	Z+4, r1	; 0x04
     308:	02 c0       	rjmp	.+4      	; 0x30e <fifo_pop+0x30>
     30a:	9f 5f       	subi	r25, 0xFF	; 255
     30c:	94 83       	std	Z+4, r25	; 0x04
     30e:	8a 30       	cpi	r24, 0x0A	; 10
     310:	19 f4       	brne	.+6      	; 0x318 <fifo_pop+0x3a>
     312:	97 81       	ldd	r25, Z+7	; 0x07
     314:	91 50       	subi	r25, 0x01	; 1
     316:	97 83       	std	Z+7, r25	; 0x07
     318:	24 81       	ldd	r18, Z+4	; 0x04
     31a:	93 81       	ldd	r25, Z+3	; 0x03
     31c:	29 13       	cpse	r18, r25
     31e:	04 c0       	rjmp	.+8      	; 0x328 <fifo_pop+0x4a>
     320:	91 e0       	ldi	r25, 0x01	; 1
     322:	95 83       	std	Z+5, r25	; 0x05
     324:	08 95       	ret
     326:	80 e0       	ldi	r24, 0x00	; 0
     328:	08 95       	ret

0000032a <fifo_is_empty>:
     32a:	fc 01       	movw	r30, r24
     32c:	85 81       	ldd	r24, Z+5	; 0x05
     32e:	08 95       	ret

00000330 <fifo_nb_line>:
     330:	fc 01       	movw	r30, r24
     332:	87 81       	ldd	r24, Z+7	; 0x07
     334:	90 e0       	ldi	r25, 0x00	; 0
     336:	08 95       	ret

00000338 <clock_data>:
     338:	88 b9       	out	0x08, r24	; 8
     33a:	84 ef       	ldi	r24, 0xF4	; 244
     33c:	91 e0       	ldi	r25, 0x01	; 1
     33e:	fc 01       	movw	r30, r24
     340:	31 97       	sbiw	r30, 0x01	; 1
     342:	f1 f7       	brne	.-4      	; 0x340 <clock_data+0x8>
     344:	17 98       	cbi	0x02, 7	; 2
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <clock_data+0xe>
     34a:	17 9a       	sbi	0x02, 7	; 2
     34c:	08 95       	ret

0000034e <hd44780_clear_display>:
     34e:	15 98       	cbi	0x02, 5	; 2
     350:	81 e0       	ldi	r24, 0x01	; 1
     352:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     356:	80 e1       	ldi	r24, 0x10	; 16
     358:	97 e2       	ldi	r25, 0x27	; 39
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	f1 f7       	brne	.-4      	; 0x35a <hd44780_clear_display+0xc>
     35e:	15 9a       	sbi	0x02, 5	; 2
     360:	08 95       	ret

00000362 <hd44780_set_entry_mode>:
     362:	81 30       	cpi	r24, 0x01	; 1
     364:	11 f0       	breq	.+4      	; 0x36a <hd44780_set_entry_mode+0x8>
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	01 c0       	rjmp	.+2      	; 0x36c <hd44780_set_entry_mode+0xa>
     36a:	82 e0       	ldi	r24, 0x02	; 2
     36c:	15 98       	cbi	0x02, 5	; 2
     36e:	84 60       	ori	r24, 0x04	; 4
     370:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     374:	15 9a       	sbi	0x02, 5	; 2
     376:	08 95       	ret

00000378 <hd44780_set_display_control>:
     378:	81 30       	cpi	r24, 0x01	; 1
     37a:	11 f4       	brne	.+4      	; 0x380 <hd44780_set_display_control+0x8>
     37c:	84 e0       	ldi	r24, 0x04	; 4
     37e:	01 c0       	rjmp	.+2      	; 0x382 <hd44780_set_display_control+0xa>
     380:	80 e0       	ldi	r24, 0x00	; 0
     382:	61 30       	cpi	r22, 0x01	; 1
     384:	09 f4       	brne	.+2      	; 0x388 <hd44780_set_display_control+0x10>
     386:	82 60       	ori	r24, 0x02	; 2
     388:	41 30       	cpi	r20, 0x01	; 1
     38a:	09 f4       	brne	.+2      	; 0x38e <hd44780_set_display_control+0x16>
     38c:	81 60       	ori	r24, 0x01	; 1
     38e:	15 98       	cbi	0x02, 5	; 2
     390:	88 60       	ori	r24, 0x08	; 8
     392:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     396:	15 9a       	sbi	0x02, 5	; 2
     398:	08 95       	ret

0000039a <hd44780_init>:
     39a:	1f 93       	push	r17
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	18 2f       	mov	r17, r24
     3a2:	c6 2f       	mov	r28, r22
     3a4:	d4 2f       	mov	r29, r20
     3a6:	15 98       	cbi	0x02, 5	; 2
     3a8:	16 98       	cbi	0x02, 6	; 2
     3aa:	8f ef       	ldi	r24, 0xFF	; 255
     3ac:	87 b9       	out	0x07, r24	; 7
     3ae:	81 b1       	in	r24, 0x01	; 1
     3b0:	80 6e       	ori	r24, 0xE0	; 224
     3b2:	81 b9       	out	0x01, r24	; 1
     3b4:	20 e3       	ldi	r18, 0x30	; 48
     3b6:	28 b9       	out	0x08, r18	; 8
     3b8:	8f ef       	ldi	r24, 0xFF	; 255
     3ba:	9f ef       	ldi	r25, 0xFF	; 255
     3bc:	fc 01       	movw	r30, r24
     3be:	31 97       	sbiw	r30, 0x01	; 1
     3c0:	f1 f7       	brne	.-4      	; 0x3be <hd44780_init+0x24>
     3c2:	17 98       	cbi	0x02, 7	; 2
     3c4:	fc 01       	movw	r30, r24
     3c6:	31 97       	sbiw	r30, 0x01	; 1
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <hd44780_init+0x2c>
     3ca:	17 9a       	sbi	0x02, 7	; 2
     3cc:	28 b9       	out	0x08, r18	; 8
     3ce:	fc 01       	movw	r30, r24
     3d0:	31 97       	sbiw	r30, 0x01	; 1
     3d2:	f1 f7       	brne	.-4      	; 0x3d0 <hd44780_init+0x36>
     3d4:	17 98       	cbi	0x02, 7	; 2
     3d6:	01 97       	sbiw	r24, 0x01	; 1
     3d8:	f1 f7       	brne	.-4      	; 0x3d6 <hd44780_init+0x3c>
     3da:	17 9a       	sbi	0x02, 7	; 2
     3dc:	28 b9       	out	0x08, r18	; 8
     3de:	84 ef       	ldi	r24, 0xF4	; 244
     3e0:	91 e0       	ldi	r25, 0x01	; 1
     3e2:	fc 01       	movw	r30, r24
     3e4:	31 97       	sbiw	r30, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <hd44780_init+0x4a>
     3e8:	17 98       	cbi	0x02, 7	; 2
     3ea:	fc 01       	movw	r30, r24
     3ec:	31 97       	sbiw	r30, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <hd44780_init+0x52>
     3f0:	17 9a       	sbi	0x02, 7	; 2
     3f2:	28 e3       	ldi	r18, 0x38	; 56
     3f4:	28 b9       	out	0x08, r18	; 8
     3f6:	fc 01       	movw	r30, r24
     3f8:	31 97       	sbiw	r30, 0x01	; 1
     3fa:	f1 f7       	brne	.-4      	; 0x3f8 <hd44780_init+0x5e>
     3fc:	17 98       	cbi	0x02, 7	; 2
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <hd44780_init+0x64>
     402:	17 9a       	sbi	0x02, 7	; 2
     404:	88 e3       	ldi	r24, 0x38	; 56
     406:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     40a:	81 2f       	mov	r24, r17
     40c:	0e 94 b1 01 	call	0x362	; 0x362 <hd44780_set_entry_mode>
     410:	4d 2f       	mov	r20, r29
     412:	6c 2f       	mov	r22, r28
     414:	81 e0       	ldi	r24, 0x01	; 1
     416:	0e 94 bc 01 	call	0x378	; 0x378 <hd44780_set_display_control>
     41a:	0e 94 a7 01 	call	0x34e	; 0x34e <hd44780_clear_display>
     41e:	df 91       	pop	r29
     420:	cf 91       	pop	r28
     422:	1f 91       	pop	r17
     424:	08 95       	ret

00000426 <hd44780_set_cursor_position>:
     426:	61 30       	cpi	r22, 0x01	; 1
     428:	11 f4       	brne	.+4      	; 0x42e <hd44780_set_cursor_position+0x8>
     42a:	90 e4       	ldi	r25, 0x40	; 64
     42c:	01 c0       	rjmp	.+2      	; 0x430 <hd44780_set_cursor_position+0xa>
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	15 98       	cbi	0x02, 5	; 2
     432:	89 0f       	add	r24, r25
     434:	80 68       	ori	r24, 0x80	; 128
     436:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     43a:	15 9a       	sbi	0x02, 5	; 2
     43c:	08 95       	ret

0000043e <hd44780_write_char>:
     43e:	15 9a       	sbi	0x02, 5	; 2
     440:	88 23       	and	r24, r24
     442:	1c f0       	brlt	.+6      	; 0x44a <hd44780_write_char+0xc>
     444:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     448:	08 95       	ret
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	fc 01       	movw	r30, r24
     44e:	e0 5c       	subi	r30, 0xC0	; 192
     450:	f1 09       	sbc	r31, r1
     452:	ed 33       	cpi	r30, 0x3D	; 61
     454:	f1 05       	cpc	r31, r1
     456:	d0 f4       	brcc	.+52     	; 0x48c <hd44780_write_char+0x4e>
     458:	e2 5c       	subi	r30, 0xC2	; 194
     45a:	ff 4f       	sbci	r31, 0xFF	; 255
     45c:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__tablejump2__>
     460:	83 e4       	ldi	r24, 0x43	; 67
     462:	17 c0       	rjmp	.+46     	; 0x492 <hd44780_write_char+0x54>
     464:	85 e4       	ldi	r24, 0x45	; 69
     466:	15 c0       	rjmp	.+42     	; 0x492 <hd44780_write_char+0x54>
     468:	89 e4       	ldi	r24, 0x49	; 73
     46a:	13 c0       	rjmp	.+38     	; 0x492 <hd44780_write_char+0x54>
     46c:	8f e4       	ldi	r24, 0x4F	; 79
     46e:	11 c0       	rjmp	.+34     	; 0x492 <hd44780_write_char+0x54>
     470:	85 e5       	ldi	r24, 0x55	; 85
     472:	0f c0       	rjmp	.+30     	; 0x492 <hd44780_write_char+0x54>
     474:	81 e6       	ldi	r24, 0x61	; 97
     476:	0d c0       	rjmp	.+26     	; 0x492 <hd44780_write_char+0x54>
     478:	83 e6       	ldi	r24, 0x63	; 99
     47a:	0b c0       	rjmp	.+22     	; 0x492 <hd44780_write_char+0x54>
     47c:	85 e6       	ldi	r24, 0x65	; 101
     47e:	09 c0       	rjmp	.+18     	; 0x492 <hd44780_write_char+0x54>
     480:	89 e6       	ldi	r24, 0x69	; 105
     482:	07 c0       	rjmp	.+14     	; 0x492 <hd44780_write_char+0x54>
     484:	8f e6       	ldi	r24, 0x6F	; 111
     486:	05 c0       	rjmp	.+10     	; 0x492 <hd44780_write_char+0x54>
     488:	85 e7       	ldi	r24, 0x75	; 117
     48a:	03 c0       	rjmp	.+6      	; 0x492 <hd44780_write_char+0x54>
     48c:	8f e3       	ldi	r24, 0x3F	; 63
     48e:	01 c0       	rjmp	.+2      	; 0x492 <hd44780_write_char+0x54>
     490:	81 e4       	ldi	r24, 0x41	; 65
     492:	0e 94 9c 01 	call	0x338	; 0x338 <clock_data>
     496:	08 95       	ret

00000498 <lcd_init>:
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	61 e0       	ldi	r22, 0x01	; 1
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	0e 94 cd 01 	call	0x39a	; 0x39a <hd44780_init>
     4a2:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <local_index>
     4a6:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <__data_end>
     4aa:	08 95       	ret

000004ac <lcd_clear_display>:
     4ac:	0e 94 a7 01 	call	0x34e	; 0x34e <hd44780_clear_display>
     4b0:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <local_index>
     4b4:	08 95       	ret

000004b6 <lcd_set_cursor_position>:
     4b6:	cf 93       	push	r28
     4b8:	df 93       	push	r29
     4ba:	80 31       	cpi	r24, 0x10	; 16
     4bc:	68 f4       	brcc	.+26     	; 0x4d8 <lcd_set_cursor_position+0x22>
     4be:	62 30       	cpi	r22, 0x02	; 2
     4c0:	58 f4       	brcc	.+22     	; 0x4d8 <lcd_set_cursor_position+0x22>
     4c2:	d6 2f       	mov	r29, r22
     4c4:	c8 2f       	mov	r28, r24
     4c6:	0e 94 13 02 	call	0x426	; 0x426 <hd44780_set_cursor_position>
     4ca:	8c 2f       	mov	r24, r28
     4cc:	90 e1       	ldi	r25, 0x10	; 16
     4ce:	d9 9f       	mul	r29, r25
     4d0:	80 0d       	add	r24, r0
     4d2:	11 24       	eor	r1, r1
     4d4:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     4d8:	df 91       	pop	r29
     4da:	cf 91       	pop	r28
     4dc:	08 95       	ret

000004de <shift_local_index>:
     4de:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <local_index>
     4e2:	29 2f       	mov	r18, r25
     4e4:	22 95       	swap	r18
     4e6:	2f 70       	andi	r18, 0x0F	; 15
     4e8:	81 30       	cpi	r24, 0x01	; 1
     4ea:	49 f4       	brne	.+18     	; 0x4fe <shift_local_index+0x20>
     4ec:	9f 31       	cpi	r25, 0x1F	; 31
     4ee:	18 f0       	brcs	.+6      	; 0x4f6 <shift_local_index+0x18>
     4f0:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <local_index>
     4f4:	0d c0       	rjmp	.+26     	; 0x510 <shift_local_index+0x32>
     4f6:	9f 5f       	subi	r25, 0xFF	; 255
     4f8:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <local_index>
     4fc:	09 c0       	rjmp	.+18     	; 0x510 <shift_local_index+0x32>
     4fe:	91 11       	cpse	r25, r1
     500:	04 c0       	rjmp	.+8      	; 0x50a <shift_local_index+0x2c>
     502:	8f e1       	ldi	r24, 0x1F	; 31
     504:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     508:	03 c0       	rjmp	.+6      	; 0x510 <shift_local_index+0x32>
     50a:	91 50       	subi	r25, 0x01	; 1
     50c:	90 93 71 01 	sts	0x0171, r25	; 0x800171 <local_index>
     510:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <local_index>
     514:	92 95       	swap	r25
     516:	9f 70       	andi	r25, 0x0F	; 15
     518:	81 e0       	ldi	r24, 0x01	; 1
     51a:	92 13       	cpse	r25, r18
     51c:	01 c0       	rjmp	.+2      	; 0x520 <shift_local_index+0x42>
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	08 95       	ret

00000522 <lcd_shift_cursor>:
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	88 30       	cpi	r24, 0x08	; 8
     526:	91 05       	cpc	r25, r1
     528:	08 f0       	brcs	.+2      	; 0x52c <lcd_shift_cursor+0xa>
     52a:	42 c0       	rjmp	.+132    	; 0x5b0 <lcd_shift_cursor+0x8e>
     52c:	fc 01       	movw	r30, r24
     52e:	e5 58       	subi	r30, 0x85	; 133
     530:	ff 4f       	sbci	r31, 0xFF	; 255
     532:	0c 94 4e 08 	jmp	0x109c	; 0x109c <__tablejump2__>
     536:	81 e0       	ldi	r24, 0x01	; 1
     538:	0e 94 6f 02 	call	0x4de	; 0x4de <shift_local_index>
     53c:	39 c0       	rjmp	.+114    	; 0x5b0 <lcd_shift_cursor+0x8e>
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	0e 94 6f 02 	call	0x4de	; 0x4de <shift_local_index>
     544:	35 c0       	rjmp	.+106    	; 0x5b0 <lcd_shift_cursor+0x8e>
     546:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     54a:	80 31       	cpi	r24, 0x10	; 16
     54c:	38 f4       	brcc	.+14     	; 0x55c <lcd_shift_cursor+0x3a>
     54e:	80 5f       	subi	r24, 0xF0	; 240
     550:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     554:	81 e0       	ldi	r24, 0x01	; 1
     556:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <__data_end>
     55a:	2a c0       	rjmp	.+84     	; 0x5b0 <lcd_shift_cursor+0x8e>
     55c:	80 51       	subi	r24, 0x10	; 16
     55e:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     562:	26 c0       	rjmp	.+76     	; 0x5b0 <lcd_shift_cursor+0x8e>
     564:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     568:	80 31       	cpi	r24, 0x10	; 16
     56a:	38 f0       	brcs	.+14     	; 0x57a <lcd_shift_cursor+0x58>
     56c:	8f 70       	andi	r24, 0x0F	; 15
     56e:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     572:	81 e0       	ldi	r24, 0x01	; 1
     574:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <__data_end>
     578:	1b c0       	rjmp	.+54     	; 0x5b0 <lcd_shift_cursor+0x8e>
     57a:	80 5f       	subi	r24, 0xF0	; 240
     57c:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     580:	17 c0       	rjmp	.+46     	; 0x5b0 <lcd_shift_cursor+0x8e>
     582:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     586:	8f 60       	ori	r24, 0x0F	; 15
     588:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     58c:	11 c0       	rjmp	.+34     	; 0x5b0 <lcd_shift_cursor+0x8e>
     58e:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     592:	80 7f       	andi	r24, 0xF0	; 240
     594:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     598:	0b c0       	rjmp	.+22     	; 0x5b0 <lcd_shift_cursor+0x8e>
     59a:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     59e:	8f 70       	andi	r24, 0x0F	; 15
     5a0:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     5a4:	05 c0       	rjmp	.+10     	; 0x5b0 <lcd_shift_cursor+0x8e>
     5a6:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     5aa:	80 5f       	subi	r24, 0xF0	; 240
     5ac:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <local_index>
     5b0:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     5b4:	68 2f       	mov	r22, r24
     5b6:	62 95       	swap	r22
     5b8:	6f 70       	andi	r22, 0x0F	; 15
     5ba:	8f 70       	andi	r24, 0x0F	; 15
     5bc:	0e 94 13 02 	call	0x426	; 0x426 <hd44780_set_cursor_position>
     5c0:	08 95       	ret

000005c2 <lcd_write_char>:
     5c2:	cf 93       	push	r28
     5c4:	c8 2f       	mov	r28, r24
     5c6:	80 32       	cpi	r24, 0x20	; 32
     5c8:	68 f4       	brcc	.+26     	; 0x5e4 <lcd_write_char+0x22>
     5ca:	8a 30       	cpi	r24, 0x0A	; 10
     5cc:	19 f0       	breq	.+6      	; 0x5d4 <lcd_write_char+0x12>
     5ce:	8d 30       	cpi	r24, 0x0D	; 13
     5d0:	29 f0       	breq	.+10     	; 0x5dc <lcd_write_char+0x1a>
     5d2:	20 c0       	rjmp	.+64     	; 0x614 <lcd_write_char+0x52>
     5d4:	83 e0       	ldi	r24, 0x03	; 3
     5d6:	0e 94 91 02 	call	0x522	; 0x522 <lcd_shift_cursor>
     5da:	1c c0       	rjmp	.+56     	; 0x614 <lcd_write_char+0x52>
     5dc:	85 e0       	ldi	r24, 0x05	; 5
     5de:	0e 94 91 02 	call	0x522	; 0x522 <lcd_shift_cursor>
     5e2:	18 c0       	rjmp	.+48     	; 0x614 <lcd_write_char+0x52>
     5e4:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <__data_end>
     5e8:	81 30       	cpi	r24, 0x01	; 1
     5ea:	21 f4       	brne	.+8      	; 0x5f4 <lcd_write_char+0x32>
     5ec:	0e 94 a7 01 	call	0x34e	; 0x34e <hd44780_clear_display>
     5f0:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <__data_end>
     5f4:	8c 2f       	mov	r24, r28
     5f6:	0e 94 1f 02 	call	0x43e	; 0x43e <hd44780_write_char>
     5fa:	81 e0       	ldi	r24, 0x01	; 1
     5fc:	0e 94 6f 02 	call	0x4de	; 0x4de <shift_local_index>
     600:	81 30       	cpi	r24, 0x01	; 1
     602:	41 f4       	brne	.+16     	; 0x614 <lcd_write_char+0x52>
     604:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <local_index>
     608:	68 2f       	mov	r22, r24
     60a:	62 95       	swap	r22
     60c:	6f 70       	andi	r22, 0x0F	; 15
     60e:	8f 70       	andi	r24, 0x0F	; 15
     610:	0e 94 13 02 	call	0x426	; 0x426 <hd44780_set_cursor_position>
     614:	cf 91       	pop	r28
     616:	08 95       	ret

00000618 <lcd_write_string>:
     618:	0f 93       	push	r16
     61a:	1f 93       	push	r17
     61c:	cf 93       	push	r28
     61e:	fc 01       	movw	r30, r24
     620:	80 81       	ld	r24, Z
     622:	88 23       	and	r24, r24
     624:	59 f0       	breq	.+22     	; 0x63c <lcd_write_string+0x24>
     626:	8f 01       	movw	r16, r30
     628:	c0 e0       	ldi	r28, 0x00	; 0
     62a:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <lcd_write_char>
     62e:	cf 5f       	subi	r28, 0xFF	; 255
     630:	f8 01       	movw	r30, r16
     632:	ec 0f       	add	r30, r28
     634:	f1 1d       	adc	r31, r1
     636:	80 81       	ld	r24, Z
     638:	81 11       	cpse	r24, r1
     63a:	f7 cf       	rjmp	.-18     	; 0x62a <lcd_write_string+0x12>
     63c:	cf 91       	pop	r28
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	08 95       	ret

00000644 <__vector_1>:
char msg3[40];
char msg4[40];


// fct d'interruption sur INT0
ISR(INT0_vect) {
     644:	1f 92       	push	r1
     646:	0f 92       	push	r0
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	0f 92       	push	r0
     64c:	11 24       	eor	r1, r1
     64e:	2f 93       	push	r18
     650:	3f 93       	push	r19
     652:	4f 93       	push	r20
     654:	5f 93       	push	r21
     656:	6f 93       	push	r22
     658:	7f 93       	push	r23
     65a:	8f 93       	push	r24
     65c:	9f 93       	push	r25
     65e:	af 93       	push	r26
     660:	bf 93       	push	r27

	if (read_bit(PIND, PD3)){
     662:	4b 9b       	sbis	0x09, 3	; 9
     664:	09 c0       	rjmp	.+18     	; 0x678 <__vector_1+0x34>
		dir=HORAIRE;
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
		clics++;
     66c:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <clics>
     670:	8f 5f       	subi	r24, 0xFF	; 255
     672:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <clics>
     676:	07 c0       	rjmp	.+14     	; 0x686 <__vector_1+0x42>
	}
	
	else {
		clics--;
     678:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <clics>
     67c:	81 50       	subi	r24, 0x01	; 1
     67e:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <clics>
		dir=ANTIHORAIRE;
     682:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
	}

	if (clics == 255)
     686:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <clics>
     68a:	8f 3f       	cpi	r24, 0xFF	; 255
     68c:	21 f4       	brne	.+8      	; 0x696 <__vector_1+0x52>
	clics = 23;
     68e:	87 e1       	ldi	r24, 0x17	; 23
     690:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <clics>
     694:	06 c0       	rjmp	.+12     	; 0x6a2 <__vector_1+0x5e>
	
	else if (clics >= 24)
     696:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <clics>
     69a:	88 31       	cpi	r24, 0x18	; 24
     69c:	10 f0       	brcs	.+4      	; 0x6a2 <__vector_1+0x5e>
	clics = 0;
     69e:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <clics>
	
	degree=clics*360/24;
     6a2:	40 91 75 01 	lds	r20, 0x0175	; 0x800175 <clics>
     6a6:	28 e6       	ldi	r18, 0x68	; 104
     6a8:	31 e0       	ldi	r19, 0x01	; 1
     6aa:	42 9f       	mul	r20, r18
     6ac:	c0 01       	movw	r24, r0
     6ae:	43 9f       	mul	r20, r19
     6b0:	90 0d       	add	r25, r0
     6b2:	11 24       	eor	r1, r1
     6b4:	68 e1       	ldi	r22, 0x18	; 24
     6b6:	70 e0       	ldi	r23, 0x00	; 0
     6b8:	0e 94 3a 08 	call	0x1074	; 0x1074 <__divmodhi4>
     6bc:	70 93 5c 03 	sts	0x035C, r23	; 0x80035c <degree+0x1>
     6c0:	60 93 5b 03 	sts	0x035B, r22	; 0x80035b <degree>
	
}
     6c4:	bf 91       	pop	r27
     6c6:	af 91       	pop	r26
     6c8:	9f 91       	pop	r25
     6ca:	8f 91       	pop	r24
     6cc:	7f 91       	pop	r23
     6ce:	6f 91       	pop	r22
     6d0:	5f 91       	pop	r21
     6d2:	4f 91       	pop	r20
     6d4:	3f 91       	pop	r19
     6d6:	2f 91       	pop	r18
     6d8:	0f 90       	pop	r0
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	0f 90       	pop	r0
     6de:	1f 90       	pop	r1
     6e0:	18 95       	reti

000006e2 <__vector_15>:

ISR (TIMER1_OVF_vect){
     6e2:	1f 92       	push	r1
     6e4:	0f 92       	push	r0
     6e6:	0f b6       	in	r0, 0x3f	; 63
     6e8:	0f 92       	push	r0
     6ea:	11 24       	eor	r1, r1
     6ec:	2f 93       	push	r18
     6ee:	8f 93       	push	r24
     6f0:	9f 93       	push	r25
	msec++;
     6f2:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <msec>
     6f6:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <msec+0x1>
     6fa:	01 96       	adiw	r24, 0x01	; 1
     6fc:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <msec+0x1>
     700:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <msec>
	if (msec>=1000){
     704:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <msec>
     708:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <msec+0x1>
     70c:	88 3e       	cpi	r24, 0xE8	; 232
     70e:	93 40       	sbci	r25, 0x03	; 3
     710:	48 f0       	brcs	.+18     	; 0x724 <__vector_15+0x42>
		msec=0;
     712:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <msec+0x1>
     716:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <msec>
		sec++;
     71a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     71e:	8f 5f       	subi	r24, 0xFF	; 255
     720:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <sec>
	}

}
     724:	9f 91       	pop	r25
     726:	8f 91       	pop	r24
     728:	2f 91       	pop	r18
     72a:	0f 90       	pop	r0
     72c:	0f be       	out	0x3f, r0	; 63
     72e:	0f 90       	pop	r0
     730:	1f 90       	pop	r1
     732:	18 95       	reti

00000734 <main>:

int main(void)
{
     734:	cf 93       	push	r28
     736:	df 93       	push	r29
     738:	cd b7       	in	r28, 0x3d	; 61
     73a:	de b7       	in	r29, 0x3e	; 62
     73c:	a8 97       	sbiw	r28, 0x28	; 40
     73e:	0f b6       	in	r0, 0x3f	; 63
     740:	f8 94       	cli
     742:	de bf       	out	0x3e, r29	; 62
     744:	0f be       	out	0x3f, r0	; 63
     746:	cd bf       	out	0x3d, r28	; 61
	char msg[40];
	char msg2[40];
	char msg5[40];
	
	// Mettre la broche du bouton du joystick en entrée
	DDRD = clear_bit(DDRD, PD2);
     748:	52 98       	cbi	0x0a, 2	; 10
	DDRD = clear_bit(DDRD, PD3);
     74a:	53 98       	cbi	0x0a, 3	; 10
	DDRA = clear_bit(DDRA, PA0);
     74c:	08 98       	cbi	0x01, 0	; 1
	DDRA = clear_bit(DDRA, PA1);
     74e:	09 98       	cbi	0x01, 1	; 1
	
	// On doit activer la "pull-up" interne de la broche pour PD3
	PORTD = set_bit(PORTD, PD2);
     750:	5a 9a       	sbi	0x0b, 2	; 11
	PORTD = set_bit(PORTD, PD3);
     752:	5b 9a       	sbi	0x0b, 3	; 11
	PORTA = set_bit(PORTA, PA0);
     754:	10 9a       	sbi	0x02, 0	; 2
	PORTA = set_bit(PORTA, PA1);
     756:	11 9a       	sbi	0x02, 1	; 2
	
	// Activer les interruptions
	EIMSK = set_bit(EIMSK, INT0);
     758:	e8 9a       	sbi	0x1d, 0	; 29
	
	//Detecter les fronts montants
	EICRA = set_bit(EICRA, ISC01);
     75a:	e9 e6       	ldi	r30, 0x69	; 105
     75c:	f0 e0       	ldi	r31, 0x00	; 0
     75e:	80 81       	ld	r24, Z
     760:	82 60       	ori	r24, 0x02	; 2
     762:	80 83       	st	Z, r24
	EICRA = clear_bit(EICRA, ISC00);
     764:	80 81       	ld	r24, Z
     766:	8e 7f       	andi	r24, 0xFE	; 254
     768:	80 83       	st	Z, r24
	
	// Activation générale des interruptions
	sei();
     76a:	78 94       	sei
	
	// Faire l'initialisation du LCD
	lcd_init();
     76c:	0e 94 4c 02 	call	0x498	; 0x498 <lcd_init>
	uart_init(UART_0);
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	0e 94 59 07 	call	0xeb2	; 0xeb2 <uart_init>
	
	// Mettre les bits 0,1,2,3,4,5 du port des DELs en sortie
	DDRB = set_bits(DDRB, 0b00000100);
     776:	22 9a       	sbi	0x04, 2	; 4
	bool l1;
	bool l2;
	uint8_t v;
	
	//Initialisation des entrées et des broches
	adc_init();
     778:	0e 94 a2 00 	call	0x144	; 0x144 <adc_init>
	pwm0_init();
     77c:	0e 94 bf 00 	call	0x17e	; 0x17e <pwm0_init>
	pwm1_init(1000);
     780:	88 ee       	ldi	r24, 0xE8	; 232
     782:	93 e0       	ldi	r25, 0x03	; 3
     784:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <pwm1_init>
	pwm1_set_PD4(20000);	//reset WIFI prevention
     788:	80 e2       	ldi	r24, 0x20	; 32
     78a:	9e e4       	ldi	r25, 0x4E	; 78
     78c:	0e 94 14 01 	call	0x228	; 0x228 <pwm1_set_PD4>
	pwm2_init();
     790:	0e 94 19 01 	call	0x232	; 0x232 <pwm2_init>
		else {
			msec=0;
			sec=0;
			//Affichage LCD Moteur x, y	
			lcd_clear_display();
			sprintf(str,"x: %3d, y: %3d", x, y);
     794:	0f 2e       	mov	r0, r31
     796:	fc e3       	ldi	r31, 0x3C	; 60
     798:	af 2e       	mov	r10, r31
     79a:	f1 e0       	ldi	r31, 0x01	; 1
     79c:	bf 2e       	mov	r11, r31
     79e:	f0 2d       	mov	r31, r0
     7a0:	0f 2e       	mov	r0, r31
     7a2:	f3 e3       	ldi	r31, 0x33	; 51
     7a4:	ef 2e       	mov	r14, r31
     7a6:	f3 e0       	ldi	r31, 0x03	; 3
     7a8:	ff 2e       	mov	r15, r31
     7aa:	f0 2d       	mov	r31, r0
			lcd_set_cursor_position(0,0);
			lcd_write_string(str);
			
			//Affichage LCD Glissière, Pince
			temps = temps + 1/100;
			sprintf(str2, "g: %3d, a: %d", g, degree);
     7ac:	0f 2e       	mov	r0, r31
     7ae:	fb e4       	ldi	r31, 0x4B	; 75
     7b0:	cf 2e       	mov	r12, r31
     7b2:	f1 e0       	ldi	r31, 0x01	; 1
     7b4:	df 2e       	mov	r13, r31
     7b6:	f0 2d       	mov	r31, r0
     7b8:	0f 2e       	mov	r0, r31
     7ba:	fd e5       	ldi	r31, 0x5D	; 93
     7bc:	2f 2e       	mov	r2, r31
     7be:	f3 e0       	ldi	r31, 0x03	; 3
     7c0:	3f 2e       	mov	r3, r31
     7c2:	f0 2d       	mov	r31, r0
		uint8_t val=0;
		
		if (a == 1){
			//Affichage LCD Automation
			lcd_clear_display();
			sprintf(msg3, "l1:%d,l2:%d,t:%d:%d",l1, l2, sec, msec);
     7c4:	0f 2e       	mov	r0, r31
     7c6:	f2 ee       	ldi	r31, 0xE2	; 226
     7c8:	8f 2e       	mov	r8, r31
     7ca:	f2 e0       	ldi	r31, 0x02	; 2
     7cc:	9f 2e       	mov	r9, r31
     7ce:	f0 2d       	mov	r31, r0
	g=100;
	
    while (1) 
    {
		//Conditions Moteur en X
		if(uart_rx_buffer_nb_line(UART_0)){
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	0e 94 d5 07 	call	0xfaa	; 0xfaa <uart_rx_buffer_nb_line>
     7d6:	89 2b       	or	r24, r25
     7d8:	d9 f3       	breq	.-10     	; 0x7d0 <main+0x9c>
			
			uart_get_line(UART_0, msg, 40);
     7da:	48 e2       	ldi	r20, 0x28	; 40
     7dc:	be 01       	movw	r22, r28
     7de:	6f 5f       	subi	r22, 0xFF	; 255
     7e0:	7f 4f       	sbci	r23, 0xFF	; 255
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <uart_get_line>
			y = msg[0];
     7e8:	09 81       	ldd	r16, Y+1	; 0x01
			x = msg[1];
     7ea:	1a 81       	ldd	r17, Y+2	; 0x02
			g = msg[2];
     7ec:	7b 80       	ldd	r7, Y+3	; 0x03
			p = msg[3];
     7ee:	6c 80       	ldd	r6, Y+4	; 0x04
			a = msg[4];
     7f0:	5d 80       	ldd	r5, Y+5	; 0x05
			
			if(x == 137){
     7f2:	19 38       	cpi	r17, 0x89	; 137
     7f4:	c9 f4       	brne	.+50     	; 0x828 <main+0xf4>
				
				pwm0_set_PB4(0);
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
				sprintf(msg,"-> x: %d", x);
     7fc:	1f 92       	push	r1
     7fe:	29 e8       	ldi	r18, 0x89	; 137
     800:	2f 93       	push	r18
     802:	81 e0       	ldi	r24, 0x01	; 1
     804:	91 e0       	ldi	r25, 0x01	; 1
     806:	9f 93       	push	r25
     808:	8f 93       	push	r24
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	8c 0f       	add	r24, r28
     810:	9d 1f       	adc	r25, r29
     812:	9f 93       	push	r25
     814:	8f 93       	push	r24
     816:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
     81a:	0f 90       	pop	r0
     81c:	0f 90       	pop	r0
     81e:	0f 90       	pop	r0
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	0f 90       	pop	r0
     826:	0f c0       	rjmp	.+30     	; 0x846 <main+0x112>
			}
			
			else if (x >= 0 && x < 135){
     828:	17 38       	cpi	r17, 0x87	; 135
     82a:	38 f4       	brcc	.+14     	; 0x83a <main+0x106>
				v = -2*x + 255;
				pwm0_set_PB4(v);
     82c:	81 2f       	mov	r24, r17
     82e:	88 0f       	add	r24, r24
     830:	80 95       	com	r24
     832:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
				PORTB = set_bit(PORTB,PB2);
     836:	2a 9a       	sbi	0x05, 2	; 5
     838:	06 c0       	rjmp	.+12     	; 0x846 <main+0x112>
			}
			
			else if(x >= 140 && x <= 255){
     83a:	1c 38       	cpi	r17, 0x8C	; 140
     83c:	20 f0       	brcs	.+8      	; 0x846 <main+0x112>
				pwm0_set_PB4(x);
     83e:	81 2f       	mov	r24, r17
     840:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
				PORTB = clear_bit(PORTB,PB2);
     844:	2a 98       	cbi	0x05, 2	; 5
			}
		
		
		//Conditions Moteur en Y
			if(y == 140) {
     846:	0c 38       	cpi	r16, 0x8C	; 140
     848:	21 f4       	brne	.+8      	; 0x852 <main+0x11e>
				pwm0_set_PB3(0);
     84a:	80 e0       	ldi	r24, 0x00	; 0
     84c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
     850:	0f c0       	rjmp	.+30     	; 0x870 <main+0x13c>
			}
			
			else if (y >= 0 && y < 130){
     852:	02 38       	cpi	r16, 0x82	; 130
     854:	38 f4       	brcc	.+14     	; 0x864 <main+0x130>
				v = -2*y + 255;
				pwm0_set_PB3(v);
     856:	80 2f       	mov	r24, r16
     858:	88 0f       	add	r24, r24
     85a:	80 95       	com	r24
     85c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				PORTB = set_bit(PORTB,PB1);
     860:	29 9a       	sbi	0x05, 1	; 5
     862:	06 c0       	rjmp	.+12     	; 0x870 <main+0x13c>
			}
			
			else if(y > 145 && y <= 255){
     864:	02 39       	cpi	r16, 0x92	; 146
     866:	20 f0       	brcs	.+8      	; 0x870 <main+0x13c>
				pwm0_set_PB3(y);
     868:	80 2f       	mov	r24, r16
     86a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				PORTB = clear_bit(PORTB,PB1);
     86e:	29 98       	cbi	0x05, 1	; 5
			}
	
	
	//Conditions Moteur Glissière
		if(g > 50 && g < 205 ){
     870:	8d ec       	ldi	r24, 0xCD	; 205
     872:	87 0d       	add	r24, r7
     874:	8a 39       	cpi	r24, 0x9A	; 154
     876:	20 f4       	brcc	.+8      	; 0x880 <main+0x14c>
			pwm2_set_PD6(0);
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	0e 94 3d 01 	call	0x27a	; 0x27a <pwm2_set_PD6>
     87e:	11 c0       	rjmp	.+34     	; 0x8a2 <main+0x16e>
		}
		
		else if (g > 205 && g <= 255){
     880:	9d ec       	ldi	r25, 0xCD	; 205
     882:	97 15       	cp	r25, r7
     884:	28 f4       	brcc	.+10     	; 0x890 <main+0x15c>
			pwm2_set_PD6(g);
     886:	87 2d       	mov	r24, r7
     888:	0e 94 3d 01 	call	0x27a	; 0x27a <pwm2_set_PD6>
			PORTB = set_bit(PORTB,PB0);
     88c:	28 9a       	sbi	0x05, 0	; 5
     88e:	09 c0       	rjmp	.+18     	; 0x8a2 <main+0x16e>
		}
		
		else if(g >= 0 && g <= 50){
     890:	22 e3       	ldi	r18, 0x32	; 50
     892:	27 15       	cp	r18, r7
     894:	30 f0       	brcs	.+12     	; 0x8a2 <main+0x16e>
			v = -2*g + 255;
			pwm2_set_PD6(v);
     896:	87 2d       	mov	r24, r7
     898:	88 0f       	add	r24, r24
     89a:	80 95       	com	r24
     89c:	0e 94 3d 01 	call	0x27a	; 0x27a <pwm2_set_PD6>
			PORTB = clear_bit(PORTB,PB0);
     8a0:	28 98       	cbi	0x05, 0	; 5
		}
	
	//Conditions Pince	
		if(p == 1){
     8a2:	31 e0       	ldi	r19, 0x01	; 1
     8a4:	63 12       	cpse	r6, r19
     8a6:	05 c0       	rjmp	.+10     	; 0x8b2 <main+0x17e>
			pwm1_set_PD5(1000);
     8a8:	88 ee       	ldi	r24, 0xE8	; 232
     8aa:	93 e0       	ldi	r25, 0x03	; 3
     8ac:	0e 94 0f 01 	call	0x21e	; 0x21e <pwm1_set_PD5>
     8b0:	06 c0       	rjmp	.+12     	; 0x8be <main+0x18a>
		}
		
		else if (p == 0){
     8b2:	61 10       	cpse	r6, r1
     8b4:	04 c0       	rjmp	.+8      	; 0x8be <main+0x18a>
			pwm1_set_PD5(5000);
     8b6:	88 e8       	ldi	r24, 0x88	; 136
     8b8:	93 e1       	ldi	r25, 0x13	; 19
     8ba:	0e 94 0f 01 	call	0x21e	; 0x21e <pwm1_set_PD5>
		}
		
	//Conditions Limit Switch
		l1 = read_bit(PINA, PA0);
     8be:	60 b0       	in	r6, 0x00	; 0
		l2 = read_bit(PINA, PA1);
     8c0:	40 b0       	in	r4, 0x00	; 0
		pwm2_set_PD6(0);
		a=1;
		*/
		
	//Programme Automation
		broche_state = read_bit(PINA, PA3);
     8c2:	80 b1       	in	r24, 0x00	; 0
     8c4:	83 fb       	bst	r24, 3
     8c6:	88 27       	eor	r24, r24
     8c8:	80 f9       	bld	r24, 0
     8ca:	80 93 0a 03 	sts	0x030A, r24	; 0x80030a <broche_state>
		uint8_t val=0;
		
		if (a == 1){
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	58 12       	cpse	r5, r24
     8d2:	d9 c1       	rjmp	.+946    	; 0xc86 <__stack+0x387>
			//Affichage LCD Automation
			lcd_clear_display();
     8d4:	0e 94 56 02 	call	0x4ac	; 0x4ac <lcd_clear_display>
			sprintf(msg3, "l1:%d,l2:%d,t:%d:%d",l1, l2, sec, msec);
     8d8:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <msec>
     8dc:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <msec+0x1>
     8e0:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <sec>
     8e4:	9f 93       	push	r25
     8e6:	8f 93       	push	r24
     8e8:	1f 92       	push	r1
     8ea:	2f 93       	push	r18
     8ec:	41 fa       	bst	r4, 1
     8ee:	44 24       	eor	r4, r4
     8f0:	40 f8       	bld	r4, 0
     8f2:	1f 92       	push	r1
     8f4:	4f 92       	push	r4
     8f6:	86 2d       	mov	r24, r6
     8f8:	81 70       	andi	r24, 0x01	; 1
     8fa:	1f 92       	push	r1
     8fc:	8f 93       	push	r24
     8fe:	2a e0       	ldi	r18, 0x0A	; 10
     900:	31 e0       	ldi	r19, 0x01	; 1
     902:	3f 93       	push	r19
     904:	2f 93       	push	r18
     906:	9f 92       	push	r9
     908:	8f 92       	push	r8
     90a:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
			lcd_set_cursor_position(0,0);
     90e:	60 e0       	ldi	r22, 0x00	; 0
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
			lcd_write_string(msg3);
     916:	c4 01       	movw	r24, r8
     918:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_write_string>
			
			//Affichage LCD Angle et Direction
			sprintf(msg4, "Angle=%3d, Dir=%d", degree, dir);
     91c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     920:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     924:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     928:	1f 92       	push	r1
     92a:	2f 93       	push	r18
     92c:	9f 93       	push	r25
     92e:	8f 93       	push	r24
     930:	2e e1       	ldi	r18, 0x1E	; 30
     932:	31 e0       	ldi	r19, 0x01	; 1
     934:	3f 93       	push	r19
     936:	2f 93       	push	r18
     938:	2b e0       	ldi	r18, 0x0B	; 11
     93a:	33 e0       	ldi	r19, 0x03	; 3
     93c:	3f 93       	push	r19
     93e:	2f 93       	push	r18
     940:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
			lcd_set_cursor_position(0,1);
     944:	61 e0       	ldi	r22, 0x01	; 1
     946:	80 e0       	ldi	r24, 0x00	; 0
     948:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
			lcd_write_string(msg4);
     94c:	8b e0       	ldi	r24, 0x0B	; 11
     94e:	93 e0       	ldi	r25, 0x03	; 3
     950:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_write_string>
			
			//Affichage TIME OVER
			if (sec > 120){
     954:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     958:	0f b6       	in	r0, 0x3f	; 63
     95a:	f8 94       	cli
     95c:	de bf       	out	0x3e, r29	; 62
     95e:	0f be       	out	0x3f, r0	; 63
     960:	cd bf       	out	0x3d, r28	; 61
     962:	89 37       	cpi	r24, 0x79	; 121
     964:	08 f4       	brcc	.+2      	; 0x968 <__stack+0x69>
     966:	54 c0       	rjmp	.+168    	; 0xa10 <__stack+0x111>
				lcd_clear_display();
     968:	0e 94 56 02 	call	0x4ac	; 0x4ac <lcd_clear_display>
				sprintf(msg3, "TIME", sec, msec);
     96c:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <msec>
     970:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <msec+0x1>
     974:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <sec>
     978:	9f 93       	push	r25
     97a:	8f 93       	push	r24
     97c:	1f 92       	push	r1
     97e:	2f 93       	push	r18
     980:	80 e3       	ldi	r24, 0x30	; 48
     982:	91 e0       	ldi	r25, 0x01	; 1
     984:	9f 93       	push	r25
     986:	8f 93       	push	r24
     988:	9f 92       	push	r9
     98a:	8f 92       	push	r8
     98c:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
				lcd_set_cursor_position(6,0);
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	86 e0       	ldi	r24, 0x06	; 6
     994:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
				lcd_write_string(msg3);
     998:	c4 01       	movw	r24, r8
     99a:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_write_string>
				
				sprintf(msg4, "OVER!!", sec, msec);
     99e:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <msec>
     9a2:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <msec+0x1>
     9a6:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <sec>
     9aa:	9f 93       	push	r25
     9ac:	8f 93       	push	r24
     9ae:	1f 92       	push	r1
     9b0:	2f 93       	push	r18
     9b2:	85 e3       	ldi	r24, 0x35	; 53
     9b4:	91 e0       	ldi	r25, 0x01	; 1
     9b6:	9f 93       	push	r25
     9b8:	8f 93       	push	r24
     9ba:	8b e0       	ldi	r24, 0x0B	; 11
     9bc:	93 e0       	ldi	r25, 0x03	; 3
     9be:	9f 93       	push	r25
     9c0:	8f 93       	push	r24
     9c2:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
				lcd_set_cursor_position(5,1);
     9c6:	61 e0       	ldi	r22, 0x01	; 1
     9c8:	85 e0       	ldi	r24, 0x05	; 5
     9ca:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
				lcd_write_string(msg4);
     9ce:	8b e0       	ldi	r24, 0x0B	; 11
     9d0:	93 e0       	ldi	r25, 0x03	; 3
     9d2:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_write_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9d6:	3f ef       	ldi	r19, 0xFF	; 255
     9d8:	83 ed       	ldi	r24, 0xD3	; 211
     9da:	90 e3       	ldi	r25, 0x30	; 48
     9dc:	31 50       	subi	r19, 0x01	; 1
     9de:	80 40       	sbci	r24, 0x00	; 0
     9e0:	90 40       	sbci	r25, 0x00	; 0
     9e2:	e1 f7       	brne	.-8      	; 0x9dc <__stack+0xdd>
     9e4:	00 c0       	rjmp	.+0      	; 0x9e6 <__stack+0xe7>
     9e6:	00 00       	nop
				
				
				_delay_ms(2000);
				lcd_clear_display();
     9e8:	0e 94 56 02 	call	0x4ac	; 0x4ac <lcd_clear_display>
				lcd_set_cursor_position(15,1);
     9ec:	61 e0       	ldi	r22, 0x01	; 1
     9ee:	8f e0       	ldi	r24, 0x0F	; 15
     9f0:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
     9f4:	2f ef       	ldi	r18, 0xFF	; 255
     9f6:	39 e6       	ldi	r19, 0x69	; 105
     9f8:	88 e1       	ldi	r24, 0x18	; 24
     9fa:	21 50       	subi	r18, 0x01	; 1
     9fc:	30 40       	sbci	r19, 0x00	; 0
     9fe:	80 40       	sbci	r24, 0x00	; 0
     a00:	e1 f7       	brne	.-8      	; 0x9fa <__stack+0xfb>
     a02:	00 c0       	rjmp	.+0      	; 0xa04 <__stack+0x105>
     a04:	00 00       	nop
     a06:	0f b6       	in	r0, 0x3f	; 63
     a08:	f8 94       	cli
     a0a:	de bf       	out	0x3e, r29	; 62
     a0c:	0f be       	out	0x3f, r0	; 63
     a0e:	cd bf       	out	0x3d, r28	; 61
			
			
			//Algorithme
			
				//quille #1
				if (degree >= 0 && degree < 10){
     a10:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     a14:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     a18:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     a1c:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     a20:	0a 97       	sbiw	r24, 0x0a	; 10
     a22:	80 f4       	brcc	.+32     	; 0xa44 <__stack+0x145>
					//fleche
					if (sec >= 0 && sec < 2)
     a24:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a28:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a2c:	82 30       	cpi	r24, 0x02	; 2
     a2e:	18 f4       	brcc	.+6      	; 0xa36 <__stack+0x137>
					pwm0_set_PB3(200);
     a30:	88 ec       	ldi	r24, 0xC8	; 200
     a32:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec == 5)
     a36:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a3a:	85 30       	cpi	r24, 0x05	; 5
     a3c:	19 f4       	brne	.+6      	; 0xa44 <__stack+0x145>
					pwm0_set_PB3(0);
     a3e:	80 e0       	ldi	r24, 0x00	; 0
     a40:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				}
				
				//quille #2
				if (degree >= 10 && degree <= 65){
     a44:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     a48:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     a4c:	0a 97       	sbiw	r24, 0x0a	; 10
     a4e:	58 f1       	brcs	.+86     	; 0xaa6 <__stack+0x1a7>
     a50:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     a54:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     a58:	82 34       	cpi	r24, 0x42	; 66
     a5a:	91 05       	cpc	r25, r1
     a5c:	20 f5       	brcc	.+72     	; 0xaa6 <__stack+0x1a7>
					//chariot
					if (sec >= 3 && sec < 10)
     a5e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a62:	83 30       	cpi	r24, 0x03	; 3
     a64:	38 f0       	brcs	.+14     	; 0xa74 <__stack+0x175>
     a66:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a6a:	8a 30       	cpi	r24, 0x0A	; 10
     a6c:	18 f4       	brcc	.+6      	; 0xa74 <__stack+0x175>
					pwm0_set_PB4(200);
     a6e:	88 ec       	ldi	r24, 0xC8	; 200
     a70:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					if (sec == 7)
     a74:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a78:	87 30       	cpi	r24, 0x07	; 7
     a7a:	19 f4       	brne	.+6      	; 0xa82 <__stack+0x183>
					pwm0_set_PB4(0);
     a7c:	80 e0       	ldi	r24, 0x00	; 0
     a7e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					
					//fleche
					if (sec >= 10 && sec < 15)
     a82:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a86:	8a 30       	cpi	r24, 0x0A	; 10
     a88:	38 f0       	brcs	.+14     	; 0xa98 <__stack+0x199>
     a8a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a8e:	8f 30       	cpi	r24, 0x0F	; 15
     a90:	18 f4       	brcc	.+6      	; 0xa98 <__stack+0x199>
					pwm0_set_PB3(200);
     a92:	88 ec       	ldi	r24, 0xC8	; 200
     a94:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec == 15)
     a98:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     a9c:	8f 30       	cpi	r24, 0x0F	; 15
     a9e:	19 f4       	brne	.+6      	; 0xaa6 <__stack+0x1a7>
					pwm0_set_PB3(0);
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				}
				
				//quille #3
				if (degree >= 65 && degree <= 120){
     aa6:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     aaa:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     aae:	81 34       	cpi	r24, 0x41	; 65
     ab0:	91 05       	cpc	r25, r1
     ab2:	60 f1       	brcs	.+88     	; 0xb0c <__stack+0x20d>
     ab4:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     ab8:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     abc:	89 37       	cpi	r24, 0x79	; 121
     abe:	91 05       	cpc	r25, r1
     ac0:	28 f5       	brcc	.+74     	; 0xb0c <__stack+0x20d>
					//chariot
					if (sec >= 15 && sec < 22)
     ac2:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     ac6:	8f 30       	cpi	r24, 0x0F	; 15
     ac8:	38 f0       	brcs	.+14     	; 0xad8 <__stack+0x1d9>
     aca:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     ace:	86 31       	cpi	r24, 0x16	; 22
     ad0:	18 f4       	brcc	.+6      	; 0xad8 <__stack+0x1d9>
					pwm0_set_PB4(200);
     ad2:	88 ec       	ldi	r24, 0xC8	; 200
     ad4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					if (sec == 22)
     ad8:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     adc:	86 31       	cpi	r24, 0x16	; 22
     ade:	19 f4       	brne	.+6      	; 0xae6 <__stack+0x1e7>
					pwm0_set_PB4(0);
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					PORTB = clear_bit(PORTB,PB2);
     ae6:	2a 98       	cbi	0x05, 2	; 5
					
					//fleche
					if (sec >= 22 && sec < 25)
     ae8:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     aec:	86 31       	cpi	r24, 0x16	; 22
     aee:	38 f0       	brcs	.+14     	; 0xafe <__stack+0x1ff>
     af0:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     af4:	89 31       	cpi	r24, 0x19	; 25
     af6:	18 f4       	brcc	.+6      	; 0xafe <__stack+0x1ff>
					pwm0_set_PB3(200);
     af8:	88 ec       	ldi	r24, 0xC8	; 200
     afa:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec == 25)
     afe:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b02:	89 31       	cpi	r24, 0x19	; 25
     b04:	19 f4       	brne	.+6      	; 0xb0c <__stack+0x20d>
					pwm0_set_PB3(0);
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				}
				
				//quille #4
				if (degree >= 120 && degree <= 185){
     b0c:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     b10:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     b14:	88 37       	cpi	r24, 0x78	; 120
     b16:	91 05       	cpc	r25, r1
     b18:	60 f1       	brcs	.+88     	; 0xb72 <__stack+0x273>
     b1a:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     b1e:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     b22:	8a 3b       	cpi	r24, 0xBA	; 186
     b24:	91 05       	cpc	r25, r1
     b26:	28 f5       	brcc	.+74     	; 0xb72 <__stack+0x273>
					//chariot
					if (sec >= 25 && sec < 32 )
     b28:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b2c:	89 31       	cpi	r24, 0x19	; 25
     b2e:	38 f0       	brcs	.+14     	; 0xb3e <__stack+0x23f>
     b30:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b34:	80 32       	cpi	r24, 0x20	; 32
     b36:	18 f4       	brcc	.+6      	; 0xb3e <__stack+0x23f>
					pwm0_set_PB4(200);
     b38:	88 ec       	ldi	r24, 0xC8	; 200
     b3a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					if (sec == 32)
     b3e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b42:	80 32       	cpi	r24, 0x20	; 32
     b44:	19 f4       	brne	.+6      	; 0xb4c <__stack+0x24d>
					pwm0_set_PB4(0);
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					PORTB = set_bit(PORTB,PB2);
     b4c:	2a 9a       	sbi	0x05, 2	; 5
					
					//fleche
					if (sec >= 32 && sec < 35)
     b4e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b52:	80 32       	cpi	r24, 0x20	; 32
     b54:	38 f0       	brcs	.+14     	; 0xb64 <__stack+0x265>
     b56:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b5a:	83 32       	cpi	r24, 0x23	; 35
     b5c:	18 f4       	brcc	.+6      	; 0xb64 <__stack+0x265>
					pwm0_set_PB3(200);
     b5e:	88 ec       	ldi	r24, 0xC8	; 200
     b60:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec == 35)
     b64:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b68:	83 32       	cpi	r24, 0x23	; 35
     b6a:	19 f4       	brne	.+6      	; 0xb72 <__stack+0x273>
					pwm0_set_PB3(0);
     b6c:	80 e0       	ldi	r24, 0x00	; 0
     b6e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				}
				
				//quille #5
				if (degree >= 185 && degree <= 245){
     b72:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     b76:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     b7a:	89 3b       	cpi	r24, 0xB9	; 185
     b7c:	91 05       	cpc	r25, r1
     b7e:	60 f1       	brcs	.+88     	; 0xbd8 <__stack+0x2d9>
     b80:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     b84:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     b88:	86 3f       	cpi	r24, 0xF6	; 246
     b8a:	91 05       	cpc	r25, r1
     b8c:	28 f5       	brcc	.+74     	; 0xbd8 <__stack+0x2d9>
					//chariot
					if (sec >= 35 && sec < 42)
     b8e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b92:	83 32       	cpi	r24, 0x23	; 35
     b94:	38 f0       	brcs	.+14     	; 0xba4 <__stack+0x2a5>
     b96:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     b9a:	8a 32       	cpi	r24, 0x2A	; 42
     b9c:	18 f4       	brcc	.+6      	; 0xba4 <__stack+0x2a5>
					pwm0_set_PB4(200);
     b9e:	88 ec       	ldi	r24, 0xC8	; 200
     ba0:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					if (sec == 42)
     ba4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     ba8:	8a 32       	cpi	r24, 0x2A	; 42
     baa:	19 f4       	brne	.+6      	; 0xbb2 <__stack+0x2b3>
					pwm0_set_PB4(0);
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					PORTB = clear_bit(PORTB,PB2);
     bb2:	2a 98       	cbi	0x05, 2	; 5
					
					//fleche
					if (sec >= 42 && sec < 45)
     bb4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     bb8:	8a 32       	cpi	r24, 0x2A	; 42
     bba:	38 f0       	brcs	.+14     	; 0xbca <__stack+0x2cb>
     bbc:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     bc0:	8d 32       	cpi	r24, 0x2D	; 45
     bc2:	18 f4       	brcc	.+6      	; 0xbca <__stack+0x2cb>
					pwm0_set_PB3(200);
     bc4:	88 ec       	ldi	r24, 0xC8	; 200
     bc6:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec == 45)
     bca:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     bce:	8d 32       	cpi	r24, 0x2D	; 45
     bd0:	19 f4       	brne	.+6      	; 0xbd8 <__stack+0x2d9>
					pwm0_set_PB3(0);
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				}
				
				//quille #6
				if (degree >= 245 && degree <= 305){
     bd8:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     bdc:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     be0:	85 3f       	cpi	r24, 0xF5	; 245
     be2:	91 05       	cpc	r25, r1
     be4:	60 f1       	brcs	.+88     	; 0xc3e <__stack+0x33f>
     be6:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     bea:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     bee:	82 33       	cpi	r24, 0x32	; 50
     bf0:	91 40       	sbci	r25, 0x01	; 1
     bf2:	28 f5       	brcc	.+74     	; 0xc3e <__stack+0x33f>
					//chariot
					if (sec >= 45 && sec < 52 )
     bf4:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     bf8:	8d 32       	cpi	r24, 0x2D	; 45
     bfa:	38 f0       	brcs	.+14     	; 0xc0a <__stack+0x30b>
     bfc:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c00:	84 33       	cpi	r24, 0x34	; 52
     c02:	18 f4       	brcc	.+6      	; 0xc0a <__stack+0x30b>
					pwm0_set_PB4(200);
     c04:	88 ec       	ldi	r24, 0xC8	; 200
     c06:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					if (sec == 52)
     c0a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c0e:	84 33       	cpi	r24, 0x34	; 52
     c10:	19 f4       	brne	.+6      	; 0xc18 <__stack+0x319>
					pwm0_set_PB4(0);
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	0e 94 d7 00 	call	0x1ae	; 0x1ae <pwm0_set_PB4>
					PORTB = set_bit(PORTB,PB2);
     c18:	2a 9a       	sbi	0x05, 2	; 5
					
					//fleche
					if (sec >= 52 && sec < 55)
     c1a:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c1e:	84 33       	cpi	r24, 0x34	; 52
     c20:	38 f0       	brcs	.+14     	; 0xc30 <__stack+0x331>
     c22:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c26:	87 33       	cpi	r24, 0x37	; 55
     c28:	18 f4       	brcc	.+6      	; 0xc30 <__stack+0x331>
					pwm0_set_PB3(200);
     c2a:	88 ec       	ldi	r24, 0xC8	; 200
     c2c:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec == 55)
     c30:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c34:	87 33       	cpi	r24, 0x37	; 55
     c36:	19 f4       	brne	.+6      	; 0xc3e <__stack+0x33f>
					pwm0_set_PB3(0);
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
				}
				
				//point final
				if (degree >= 305 && degree <= 330){
     c3e:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     c42:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     c46:	81 33       	cpi	r24, 0x31	; 49
     c48:	91 40       	sbci	r25, 0x01	; 1
     c4a:	08 f4       	brcc	.+2      	; 0xc4e <__stack+0x34f>
     c4c:	c1 cd       	rjmp	.-1150   	; 0x7d0 <main+0x9c>
     c4e:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     c52:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     c56:	8b 34       	cpi	r24, 0x4B	; 75
     c58:	91 40       	sbci	r25, 0x01	; 1
     c5a:	08 f0       	brcs	.+2      	; 0xc5e <__stack+0x35f>
     c5c:	b9 cd       	rjmp	.-1166   	; 0x7d0 <main+0x9c>
					//fleche
					if (sec >= 55 && sec < 58)
     c5e:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c62:	87 33       	cpi	r24, 0x37	; 55
     c64:	38 f0       	brcs	.+14     	; 0xc74 <__stack+0x375>
     c66:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c6a:	8a 33       	cpi	r24, 0x3A	; 58
     c6c:	18 f4       	brcc	.+6      	; 0xc74 <__stack+0x375>
					pwm0_set_PB3(200);
     c6e:	88 ec       	ldi	r24, 0xC8	; 200
     c70:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
					if (sec > 58)
     c74:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <sec>
     c78:	8b 33       	cpi	r24, 0x3B	; 59
     c7a:	08 f4       	brcc	.+2      	; 0xc7e <__stack+0x37f>
     c7c:	a9 cd       	rjmp	.-1198   	; 0x7d0 <main+0x9c>
					pwm0_set_PB3(0);
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	0e 94 d5 00 	call	0x1aa	; 0x1aa <pwm0_set_PB3>
     c84:	a5 cd       	rjmp	.-1206   	; 0x7d0 <main+0x9c>
				}
		}
		
		else {
			msec=0;
     c86:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <msec+0x1>
     c8a:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <msec>
			sec=0;
     c8e:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <sec>
			//Affichage LCD Moteur x, y	
			lcd_clear_display();
     c92:	0e 94 56 02 	call	0x4ac	; 0x4ac <lcd_clear_display>
			sprintf(str,"x: %3d, y: %3d", x, y);
     c96:	1f 92       	push	r1
     c98:	0f 93       	push	r16
     c9a:	1f 92       	push	r1
     c9c:	1f 93       	push	r17
     c9e:	bf 92       	push	r11
     ca0:	af 92       	push	r10
     ca2:	ff 92       	push	r15
     ca4:	ef 92       	push	r14
     ca6:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
			lcd_set_cursor_position(0,0);
     caa:	60 e0       	ldi	r22, 0x00	; 0
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
			lcd_write_string(str);
     cb2:	c7 01       	movw	r24, r14
     cb4:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_write_string>
			
			//Affichage LCD Glissière, Pince
			temps = temps + 1/100;
			sprintf(str2, "g: %3d, a: %d", g, degree);
     cb8:	80 91 5b 03 	lds	r24, 0x035B	; 0x80035b <degree>
     cbc:	90 91 5c 03 	lds	r25, 0x035C	; 0x80035c <degree+0x1>
     cc0:	9f 93       	push	r25
     cc2:	8f 93       	push	r24
     cc4:	1f 92       	push	r1
     cc6:	7f 92       	push	r7
     cc8:	df 92       	push	r13
     cca:	cf 92       	push	r12
     ccc:	3f 92       	push	r3
     cce:	2f 92       	push	r2
     cd0:	0e 94 54 08 	call	0x10a8	; 0x10a8 <sprintf>
			lcd_set_cursor_position(0,1);
     cd4:	61 e0       	ldi	r22, 0x01	; 1
     cd6:	80 e0       	ldi	r24, 0x00	; 0
     cd8:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <lcd_set_cursor_position>
			lcd_write_string(str2);
     cdc:	c1 01       	movw	r24, r2
     cde:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_write_string>
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	71 cd       	rjmp	.-1310   	; 0x7d0 <main+0x9c>

00000cee <disable_UDRE_interupt>:
     cee:	88 23       	and	r24, r24
     cf0:	19 f0       	breq	.+6      	; 0xcf8 <disable_UDRE_interupt+0xa>
     cf2:	81 30       	cpi	r24, 0x01	; 1
     cf4:	39 f0       	breq	.+14     	; 0xd04 <disable_UDRE_interupt+0x16>
     cf6:	08 95       	ret
     cf8:	e1 ec       	ldi	r30, 0xC1	; 193
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	80 81       	ld	r24, Z
     cfe:	8f 7d       	andi	r24, 0xDF	; 223
     d00:	80 83       	st	Z, r24
     d02:	08 95       	ret
     d04:	e9 ec       	ldi	r30, 0xC9	; 201
     d06:	f0 e0       	ldi	r31, 0x00	; 0
     d08:	80 81       	ld	r24, Z
     d0a:	8f 7d       	andi	r24, 0xDF	; 223
     d0c:	80 83       	st	Z, r24
     d0e:	08 95       	ret

00000d10 <__vector_21>:
     d10:	1f 92       	push	r1
     d12:	0f 92       	push	r0
     d14:	0f b6       	in	r0, 0x3f	; 63
     d16:	0f 92       	push	r0
     d18:	11 24       	eor	r1, r1
     d1a:	2f 93       	push	r18
     d1c:	3f 93       	push	r19
     d1e:	4f 93       	push	r20
     d20:	5f 93       	push	r21
     d22:	6f 93       	push	r22
     d24:	7f 93       	push	r23
     d26:	8f 93       	push	r24
     d28:	9f 93       	push	r25
     d2a:	af 93       	push	r26
     d2c:	bf 93       	push	r27
     d2e:	ef 93       	push	r30
     d30:	ff 93       	push	r31
     d32:	86 e8       	ldi	r24, 0x86	; 134
     d34:	91 e0       	ldi	r25, 0x01	; 1
     d36:	0e 94 6f 01 	call	0x2de	; 0x2de <fifo_pop>
     d3a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     d3e:	86 e8       	ldi	r24, 0x86	; 134
     d40:	91 e0       	ldi	r25, 0x01	; 1
     d42:	0e 94 95 01 	call	0x32a	; 0x32a <fifo_is_empty>
     d46:	81 30       	cpi	r24, 0x01	; 1
     d48:	19 f4       	brne	.+6      	; 0xd50 <__vector_21+0x40>
     d4a:	80 e0       	ldi	r24, 0x00	; 0
     d4c:	0e 94 77 06 	call	0xcee	; 0xcee <disable_UDRE_interupt>
     d50:	ff 91       	pop	r31
     d52:	ef 91       	pop	r30
     d54:	bf 91       	pop	r27
     d56:	af 91       	pop	r26
     d58:	9f 91       	pop	r25
     d5a:	8f 91       	pop	r24
     d5c:	7f 91       	pop	r23
     d5e:	6f 91       	pop	r22
     d60:	5f 91       	pop	r21
     d62:	4f 91       	pop	r20
     d64:	3f 91       	pop	r19
     d66:	2f 91       	pop	r18
     d68:	0f 90       	pop	r0
     d6a:	0f be       	out	0x3f, r0	; 63
     d6c:	0f 90       	pop	r0
     d6e:	1f 90       	pop	r1
     d70:	18 95       	reti

00000d72 <__vector_20>:
     d72:	1f 92       	push	r1
     d74:	0f 92       	push	r0
     d76:	0f b6       	in	r0, 0x3f	; 63
     d78:	0f 92       	push	r0
     d7a:	11 24       	eor	r1, r1
     d7c:	2f 93       	push	r18
     d7e:	3f 93       	push	r19
     d80:	4f 93       	push	r20
     d82:	5f 93       	push	r21
     d84:	6f 93       	push	r22
     d86:	7f 93       	push	r23
     d88:	8f 93       	push	r24
     d8a:	9f 93       	push	r25
     d8c:	af 93       	push	r26
     d8e:	bf 93       	push	r27
     d90:	ef 93       	push	r30
     d92:	ff 93       	push	r31
     d94:	60 91 c6 00 	lds	r22, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     d98:	8e e8       	ldi	r24, 0x8E	; 142
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	0e 94 4b 01 	call	0x296	; 0x296 <fifo_push>
     da0:	ff 91       	pop	r31
     da2:	ef 91       	pop	r30
     da4:	bf 91       	pop	r27
     da6:	af 91       	pop	r26
     da8:	9f 91       	pop	r25
     daa:	8f 91       	pop	r24
     dac:	7f 91       	pop	r23
     dae:	6f 91       	pop	r22
     db0:	5f 91       	pop	r21
     db2:	4f 91       	pop	r20
     db4:	3f 91       	pop	r19
     db6:	2f 91       	pop	r18
     db8:	0f 90       	pop	r0
     dba:	0f be       	out	0x3f, r0	; 63
     dbc:	0f 90       	pop	r0
     dbe:	1f 90       	pop	r1
     dc0:	18 95       	reti

00000dc2 <__vector_29>:
     dc2:	1f 92       	push	r1
     dc4:	0f 92       	push	r0
     dc6:	0f b6       	in	r0, 0x3f	; 63
     dc8:	0f 92       	push	r0
     dca:	11 24       	eor	r1, r1
     dcc:	2f 93       	push	r18
     dce:	3f 93       	push	r19
     dd0:	4f 93       	push	r20
     dd2:	5f 93       	push	r21
     dd4:	6f 93       	push	r22
     dd6:	7f 93       	push	r23
     dd8:	8f 93       	push	r24
     dda:	9f 93       	push	r25
     ddc:	af 93       	push	r26
     dde:	bf 93       	push	r27
     de0:	ef 93       	push	r30
     de2:	ff 93       	push	r31
     de4:	86 e7       	ldi	r24, 0x76	; 118
     de6:	91 e0       	ldi	r25, 0x01	; 1
     de8:	0e 94 6f 01 	call	0x2de	; 0x2de <fifo_pop>
     dec:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>
     df0:	86 e7       	ldi	r24, 0x76	; 118
     df2:	91 e0       	ldi	r25, 0x01	; 1
     df4:	0e 94 95 01 	call	0x32a	; 0x32a <fifo_is_empty>
     df8:	88 23       	and	r24, r24
     dfa:	19 f0       	breq	.+6      	; 0xe02 <__vector_29+0x40>
     dfc:	81 e0       	ldi	r24, 0x01	; 1
     dfe:	0e 94 77 06 	call	0xcee	; 0xcee <disable_UDRE_interupt>
     e02:	ff 91       	pop	r31
     e04:	ef 91       	pop	r30
     e06:	bf 91       	pop	r27
     e08:	af 91       	pop	r26
     e0a:	9f 91       	pop	r25
     e0c:	8f 91       	pop	r24
     e0e:	7f 91       	pop	r23
     e10:	6f 91       	pop	r22
     e12:	5f 91       	pop	r21
     e14:	4f 91       	pop	r20
     e16:	3f 91       	pop	r19
     e18:	2f 91       	pop	r18
     e1a:	0f 90       	pop	r0
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	0f 90       	pop	r0
     e20:	1f 90       	pop	r1
     e22:	18 95       	reti

00000e24 <__vector_28>:
     e24:	1f 92       	push	r1
     e26:	0f 92       	push	r0
     e28:	0f b6       	in	r0, 0x3f	; 63
     e2a:	0f 92       	push	r0
     e2c:	11 24       	eor	r1, r1
     e2e:	2f 93       	push	r18
     e30:	3f 93       	push	r19
     e32:	4f 93       	push	r20
     e34:	5f 93       	push	r21
     e36:	6f 93       	push	r22
     e38:	7f 93       	push	r23
     e3a:	8f 93       	push	r24
     e3c:	9f 93       	push	r25
     e3e:	af 93       	push	r26
     e40:	bf 93       	push	r27
     e42:	ef 93       	push	r30
     e44:	ff 93       	push	r31
     e46:	60 91 ce 00 	lds	r22, 0x00CE	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>
     e4a:	8e e7       	ldi	r24, 0x7E	; 126
     e4c:	91 e0       	ldi	r25, 0x01	; 1
     e4e:	0e 94 4b 01 	call	0x296	; 0x296 <fifo_push>
     e52:	ff 91       	pop	r31
     e54:	ef 91       	pop	r30
     e56:	bf 91       	pop	r27
     e58:	af 91       	pop	r26
     e5a:	9f 91       	pop	r25
     e5c:	8f 91       	pop	r24
     e5e:	7f 91       	pop	r23
     e60:	6f 91       	pop	r22
     e62:	5f 91       	pop	r21
     e64:	4f 91       	pop	r20
     e66:	3f 91       	pop	r19
     e68:	2f 91       	pop	r18
     e6a:	0f 90       	pop	r0
     e6c:	0f be       	out	0x3f, r0	; 63
     e6e:	0f 90       	pop	r0
     e70:	1f 90       	pop	r1
     e72:	18 95       	reti

00000e74 <uart_set_baudrate>:
     e74:	88 23       	and	r24, r24
     e76:	19 f0       	breq	.+6      	; 0xe7e <uart_set_baudrate+0xa>
     e78:	81 30       	cpi	r24, 0x01	; 1
     e7a:	71 f0       	breq	.+28     	; 0xe98 <uart_set_baudrate+0x24>
     e7c:	08 95       	ret
     e7e:	e6 2f       	mov	r30, r22
     e80:	f0 e0       	ldi	r31, 0x00	; 0
     e82:	ee 0f       	add	r30, r30
     e84:	ff 1f       	adc	r31, r31
     e86:	e3 5a       	subi	r30, 0xA3	; 163
     e88:	fe 4f       	sbci	r31, 0xFE	; 254
     e8a:	80 81       	ld	r24, Z
     e8c:	91 81       	ldd	r25, Z+1	; 0x01
     e8e:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     e92:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     e96:	08 95       	ret
     e98:	e6 2f       	mov	r30, r22
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	ee 0f       	add	r30, r30
     e9e:	ff 1f       	adc	r31, r31
     ea0:	e3 5a       	subi	r30, 0xA3	; 163
     ea2:	fe 4f       	sbci	r31, 0xFE	; 254
     ea4:	80 81       	ld	r24, Z
     ea6:	91 81       	ldd	r25, Z+1	; 0x01
     ea8:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__DATA_REGION_ORIGIN__+0x6d>
     eac:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__DATA_REGION_ORIGIN__+0x6c>
     eb0:	08 95       	ret

00000eb2 <uart_init>:
     eb2:	cf 93       	push	r28
     eb4:	c8 2f       	mov	r28, r24
     eb6:	88 23       	and	r24, r24
     eb8:	19 f0       	breq	.+6      	; 0xec0 <uart_init+0xe>
     eba:	81 30       	cpi	r24, 0x01	; 1
     ebc:	c1 f0       	breq	.+48     	; 0xeee <uart_init+0x3c>
     ebe:	2d c0       	rjmp	.+90     	; 0xf1a <uart_init+0x68>
     ec0:	86 e0       	ldi	r24, 0x06	; 6
     ec2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     ec6:	88 e9       	ldi	r24, 0x98	; 152
     ec8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     ecc:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     ed0:	46 e9       	ldi	r20, 0x96	; 150
     ed2:	6c e4       	ldi	r22, 0x4C	; 76
     ed4:	72 e0       	ldi	r23, 0x02	; 2
     ed6:	8e e8       	ldi	r24, 0x8E	; 142
     ed8:	91 e0       	ldi	r25, 0x01	; 1
     eda:	0e 94 40 01 	call	0x280	; 0x280 <fifo_init>
     ede:	46 e9       	ldi	r20, 0x96	; 150
     ee0:	66 eb       	ldi	r22, 0xB6	; 182
     ee2:	71 e0       	ldi	r23, 0x01	; 1
     ee4:	86 e8       	ldi	r24, 0x86	; 134
     ee6:	91 e0       	ldi	r25, 0x01	; 1
     ee8:	0e 94 40 01 	call	0x280	; 0x280 <fifo_init>
     eec:	16 c0       	rjmp	.+44     	; 0xf1a <uart_init+0x68>
     eee:	86 e0       	ldi	r24, 0x06	; 6
     ef0:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__DATA_REGION_ORIGIN__+0x6a>
     ef4:	88 e9       	ldi	r24, 0x98	; 152
     ef6:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__DATA_REGION_ORIGIN__+0x69>
     efa:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__DATA_REGION_ORIGIN__+0x68>
     efe:	40 e1       	ldi	r20, 0x10	; 16
     f00:	66 ea       	ldi	r22, 0xA6	; 166
     f02:	71 e0       	ldi	r23, 0x01	; 1
     f04:	8e e7       	ldi	r24, 0x7E	; 126
     f06:	91 e0       	ldi	r25, 0x01	; 1
     f08:	0e 94 40 01 	call	0x280	; 0x280 <fifo_init>
     f0c:	40 e1       	ldi	r20, 0x10	; 16
     f0e:	66 e9       	ldi	r22, 0x96	; 150
     f10:	71 e0       	ldi	r23, 0x01	; 1
     f12:	86 e7       	ldi	r24, 0x76	; 118
     f14:	91 e0       	ldi	r25, 0x01	; 1
     f16:	0e 94 40 01 	call	0x280	; 0x280 <fifo_init>
     f1a:	62 e0       	ldi	r22, 0x02	; 2
     f1c:	8c 2f       	mov	r24, r28
     f1e:	0e 94 3a 07 	call	0xe74	; 0xe74 <uart_set_baudrate>
     f22:	cf 91       	pop	r28
     f24:	08 95       	ret

00000f26 <uart_get_byte>:
     f26:	cf 93       	push	r28
     f28:	c8 2f       	mov	r28, r24
     f2a:	88 23       	and	r24, r24
     f2c:	19 f0       	breq	.+6      	; 0xf34 <uart_get_byte+0xe>
     f2e:	81 30       	cpi	r24, 0x01	; 1
     f30:	59 f0       	breq	.+22     	; 0xf48 <uart_get_byte+0x22>
     f32:	14 c0       	rjmp	.+40     	; 0xf5c <uart_get_byte+0x36>
     f34:	e1 ec       	ldi	r30, 0xC1	; 193
     f36:	f0 e0       	ldi	r31, 0x00	; 0
     f38:	80 81       	ld	r24, Z
     f3a:	8f 77       	andi	r24, 0x7F	; 127
     f3c:	80 83       	st	Z, r24
     f3e:	8e e8       	ldi	r24, 0x8E	; 142
     f40:	91 e0       	ldi	r25, 0x01	; 1
     f42:	0e 94 6f 01 	call	0x2de	; 0x2de <fifo_pop>
     f46:	19 c0       	rjmp	.+50     	; 0xf7a <uart_get_byte+0x54>
     f48:	e9 ec       	ldi	r30, 0xC9	; 201
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	80 81       	ld	r24, Z
     f4e:	8f 77       	andi	r24, 0x7F	; 127
     f50:	80 83       	st	Z, r24
     f52:	8e e7       	ldi	r24, 0x7E	; 126
     f54:	91 e0       	ldi	r25, 0x01	; 1
     f56:	0e 94 6f 01 	call	0x2de	; 0x2de <fifo_pop>
     f5a:	15 c0       	rjmp	.+42     	; 0xf86 <uart_get_byte+0x60>
     f5c:	e8 2f       	mov	r30, r24
     f5e:	f0 e0       	ldi	r31, 0x00	; 0
     f60:	ee 0f       	add	r30, r30
     f62:	ff 1f       	adc	r31, r31
     f64:	e7 5a       	subi	r30, 0xA7	; 167
     f66:	fe 4f       	sbci	r31, 0xFE	; 254
     f68:	80 81       	ld	r24, Z
     f6a:	91 81       	ldd	r25, Z+1	; 0x01
     f6c:	0e 94 6f 01 	call	0x2de	; 0x2de <fifo_pop>
     f70:	cc 23       	and	r28, r28
     f72:	19 f0       	breq	.+6      	; 0xf7a <uart_get_byte+0x54>
     f74:	c1 30       	cpi	r28, 0x01	; 1
     f76:	61 f4       	brne	.+24     	; 0xf90 <uart_get_byte+0x6a>
     f78:	06 c0       	rjmp	.+12     	; 0xf86 <uart_get_byte+0x60>
     f7a:	e1 ec       	ldi	r30, 0xC1	; 193
     f7c:	f0 e0       	ldi	r31, 0x00	; 0
     f7e:	90 81       	ld	r25, Z
     f80:	90 68       	ori	r25, 0x80	; 128
     f82:	90 83       	st	Z, r25
     f84:	05 c0       	rjmp	.+10     	; 0xf90 <uart_get_byte+0x6a>
     f86:	e9 ec       	ldi	r30, 0xC9	; 201
     f88:	f0 e0       	ldi	r31, 0x00	; 0
     f8a:	90 81       	ld	r25, Z
     f8c:	90 68       	ori	r25, 0x80	; 128
     f8e:	90 83       	st	Z, r25
     f90:	cf 91       	pop	r28
     f92:	08 95       	ret

00000f94 <uart_is_rx_buffer_empty>:
     f94:	e8 2f       	mov	r30, r24
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	ee 0f       	add	r30, r30
     f9a:	ff 1f       	adc	r31, r31
     f9c:	e7 5a       	subi	r30, 0xA7	; 167
     f9e:	fe 4f       	sbci	r31, 0xFE	; 254
     fa0:	80 81       	ld	r24, Z
     fa2:	91 81       	ldd	r25, Z+1	; 0x01
     fa4:	0e 94 95 01 	call	0x32a	; 0x32a <fifo_is_empty>
     fa8:	08 95       	ret

00000faa <uart_rx_buffer_nb_line>:
     faa:	e8 2f       	mov	r30, r24
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	ee 0f       	add	r30, r30
     fb0:	ff 1f       	adc	r31, r31
     fb2:	e7 5a       	subi	r30, 0xA7	; 167
     fb4:	fe 4f       	sbci	r31, 0xFE	; 254
     fb6:	80 81       	ld	r24, Z
     fb8:	91 81       	ldd	r25, Z+1	; 0x01
     fba:	0e 94 98 01 	call	0x330	; 0x330 <fifo_nb_line>
     fbe:	08 95       	ret

00000fc0 <uart_get_line>:
     fc0:	af 92       	push	r10
     fc2:	bf 92       	push	r11
     fc4:	df 92       	push	r13
     fc6:	ef 92       	push	r14
     fc8:	ff 92       	push	r15
     fca:	0f 93       	push	r16
     fcc:	1f 93       	push	r17
     fce:	cf 93       	push	r28
     fd0:	df 93       	push	r29
     fd2:	08 2f       	mov	r16, r24
     fd4:	7b 01       	movw	r14, r22
     fd6:	c4 2f       	mov	r28, r20
     fd8:	df b7       	in	r29, 0x3f	; 63
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
     fda:	f8 94       	cli
     fdc:	0e 94 d5 07 	call	0xfaa	; 0xfaa <uart_rx_buffer_nb_line>
    (void)__s;
}

static __inline__ void __iRestore(const  uint8_t *__s)
{
    SREG = *__s;
     fe0:	df bf       	out	0x3f, r29	; 63
     fe2:	18 16       	cp	r1, r24
     fe4:	19 06       	cpc	r1, r25
     fe6:	0c f5       	brge	.+66     	; 0x102a <uart_get_line+0x6a>
     fe8:	10 e0       	ldi	r17, 0x00	; 0
     fea:	d0 e0       	ldi	r29, 0x00	; 0
     fec:	21 97       	sbiw	r28, 0x01	; 1
     fee:	80 2f       	mov	r24, r16
     ff0:	0e 94 ca 07 	call	0xf94	; 0xf94 <uart_is_rx_buffer_empty>
     ff4:	81 11       	cpse	r24, r1
     ff6:	0c c0       	rjmp	.+24     	; 0x1010 <uart_get_line+0x50>
     ff8:	dd 24       	eor	r13, r13
     ffa:	d3 94       	inc	r13
     ffc:	d1 0e       	add	r13, r17
     ffe:	57 01       	movw	r10, r14
    1000:	a1 0e       	add	r10, r17
    1002:	b1 1c       	adc	r11, r1
    1004:	80 2f       	mov	r24, r16
    1006:	0e 94 93 07 	call	0xf26	; 0xf26 <uart_get_byte>
    100a:	f5 01       	movw	r30, r10
    100c:	80 83       	st	Z, r24
    100e:	1d 2d       	mov	r17, r13
    1010:	f7 01       	movw	r30, r14
    1012:	e1 0f       	add	r30, r17
    1014:	f1 1d       	adc	r31, r1
    1016:	31 97       	sbiw	r30, 0x01	; 1
    1018:	80 81       	ld	r24, Z
    101a:	8a 30       	cpi	r24, 0x0A	; 10
    101c:	39 f0       	breq	.+14     	; 0x102c <uart_get_line+0x6c>
    101e:	81 2f       	mov	r24, r17
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	8c 17       	cp	r24, r28
    1024:	9d 07       	cpc	r25, r29
    1026:	1c f3       	brlt	.-58     	; 0xfee <uart_get_line+0x2e>
    1028:	01 c0       	rjmp	.+2      	; 0x102c <uart_get_line+0x6c>
    102a:	10 e0       	ldi	r17, 0x00	; 0
    102c:	81 2f       	mov	r24, r17
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	f7 01       	movw	r30, r14
    1032:	e8 0f       	add	r30, r24
    1034:	f9 1f       	adc	r31, r25
    1036:	10 82       	st	Z, r1
    1038:	df 91       	pop	r29
    103a:	cf 91       	pop	r28
    103c:	1f 91       	pop	r17
    103e:	0f 91       	pop	r16
    1040:	ff 90       	pop	r15
    1042:	ef 90       	pop	r14
    1044:	df 90       	pop	r13
    1046:	bf 90       	pop	r11
    1048:	af 90       	pop	r10
    104a:	08 95       	ret

0000104c <__udivmodhi4>:
    104c:	aa 1b       	sub	r26, r26
    104e:	bb 1b       	sub	r27, r27
    1050:	51 e1       	ldi	r21, 0x11	; 17
    1052:	07 c0       	rjmp	.+14     	; 0x1062 <__udivmodhi4_ep>

00001054 <__udivmodhi4_loop>:
    1054:	aa 1f       	adc	r26, r26
    1056:	bb 1f       	adc	r27, r27
    1058:	a6 17       	cp	r26, r22
    105a:	b7 07       	cpc	r27, r23
    105c:	10 f0       	brcs	.+4      	; 0x1062 <__udivmodhi4_ep>
    105e:	a6 1b       	sub	r26, r22
    1060:	b7 0b       	sbc	r27, r23

00001062 <__udivmodhi4_ep>:
    1062:	88 1f       	adc	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	5a 95       	dec	r21
    1068:	a9 f7       	brne	.-22     	; 0x1054 <__udivmodhi4_loop>
    106a:	80 95       	com	r24
    106c:	90 95       	com	r25
    106e:	bc 01       	movw	r22, r24
    1070:	cd 01       	movw	r24, r26
    1072:	08 95       	ret

00001074 <__divmodhi4>:
    1074:	97 fb       	bst	r25, 7
    1076:	07 2e       	mov	r0, r23
    1078:	16 f4       	brtc	.+4      	; 0x107e <__divmodhi4+0xa>
    107a:	00 94       	com	r0
    107c:	07 d0       	rcall	.+14     	; 0x108c <__divmodhi4_neg1>
    107e:	77 fd       	sbrc	r23, 7
    1080:	09 d0       	rcall	.+18     	; 0x1094 <__divmodhi4_neg2>
    1082:	0e 94 26 08 	call	0x104c	; 0x104c <__udivmodhi4>
    1086:	07 fc       	sbrc	r0, 7
    1088:	05 d0       	rcall	.+10     	; 0x1094 <__divmodhi4_neg2>
    108a:	3e f4       	brtc	.+14     	; 0x109a <__divmodhi4_exit>

0000108c <__divmodhi4_neg1>:
    108c:	90 95       	com	r25
    108e:	81 95       	neg	r24
    1090:	9f 4f       	sbci	r25, 0xFF	; 255
    1092:	08 95       	ret

00001094 <__divmodhi4_neg2>:
    1094:	70 95       	com	r23
    1096:	61 95       	neg	r22
    1098:	7f 4f       	sbci	r23, 0xFF	; 255

0000109a <__divmodhi4_exit>:
    109a:	08 95       	ret

0000109c <__tablejump2__>:
    109c:	ee 0f       	add	r30, r30
    109e:	ff 1f       	adc	r31, r31
    10a0:	05 90       	lpm	r0, Z+
    10a2:	f4 91       	lpm	r31, Z
    10a4:	e0 2d       	mov	r30, r0
    10a6:	09 94       	ijmp

000010a8 <sprintf>:
    10a8:	ae e0       	ldi	r26, 0x0E	; 14
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	ea e5       	ldi	r30, 0x5A	; 90
    10ae:	f8 e0       	ldi	r31, 0x08	; 8
    10b0:	0c 94 15 0b 	jmp	0x162a	; 0x162a <__prologue_saves__+0x1c>
    10b4:	0d 89       	ldd	r16, Y+21	; 0x15
    10b6:	1e 89       	ldd	r17, Y+22	; 0x16
    10b8:	86 e0       	ldi	r24, 0x06	; 6
    10ba:	8c 83       	std	Y+4, r24	; 0x04
    10bc:	1a 83       	std	Y+2, r17	; 0x02
    10be:	09 83       	std	Y+1, r16	; 0x01
    10c0:	8f ef       	ldi	r24, 0xFF	; 255
    10c2:	9f e7       	ldi	r25, 0x7F	; 127
    10c4:	9e 83       	std	Y+6, r25	; 0x06
    10c6:	8d 83       	std	Y+5, r24	; 0x05
    10c8:	ae 01       	movw	r20, r28
    10ca:	47 5e       	subi	r20, 0xE7	; 231
    10cc:	5f 4f       	sbci	r21, 0xFF	; 255
    10ce:	6f 89       	ldd	r22, Y+23	; 0x17
    10d0:	78 8d       	ldd	r23, Y+24	; 0x18
    10d2:	ce 01       	movw	r24, r28
    10d4:	01 96       	adiw	r24, 0x01	; 1
    10d6:	0e 94 76 08 	call	0x10ec	; 0x10ec <vfprintf>
    10da:	ef 81       	ldd	r30, Y+7	; 0x07
    10dc:	f8 85       	ldd	r31, Y+8	; 0x08
    10de:	e0 0f       	add	r30, r16
    10e0:	f1 1f       	adc	r31, r17
    10e2:	10 82       	st	Z, r1
    10e4:	2e 96       	adiw	r28, 0x0e	; 14
    10e6:	e4 e0       	ldi	r30, 0x04	; 4
    10e8:	0c 94 31 0b 	jmp	0x1662	; 0x1662 <__epilogue_restores__+0x1c>

000010ec <vfprintf>:
    10ec:	ab e0       	ldi	r26, 0x0B	; 11
    10ee:	b0 e0       	ldi	r27, 0x00	; 0
    10f0:	ec e7       	ldi	r30, 0x7C	; 124
    10f2:	f8 e0       	ldi	r31, 0x08	; 8
    10f4:	0c 94 07 0b 	jmp	0x160e	; 0x160e <__prologue_saves__>
    10f8:	6c 01       	movw	r12, r24
    10fa:	7b 01       	movw	r14, r22
    10fc:	8a 01       	movw	r16, r20
    10fe:	fc 01       	movw	r30, r24
    1100:	17 82       	std	Z+7, r1	; 0x07
    1102:	16 82       	std	Z+6, r1	; 0x06
    1104:	83 81       	ldd	r24, Z+3	; 0x03
    1106:	81 ff       	sbrs	r24, 1
    1108:	cc c1       	rjmp	.+920    	; 0x14a2 <vfprintf+0x3b6>
    110a:	ce 01       	movw	r24, r28
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	3c 01       	movw	r6, r24
    1110:	f6 01       	movw	r30, r12
    1112:	93 81       	ldd	r25, Z+3	; 0x03
    1114:	f7 01       	movw	r30, r14
    1116:	93 fd       	sbrc	r25, 3
    1118:	85 91       	lpm	r24, Z+
    111a:	93 ff       	sbrs	r25, 3
    111c:	81 91       	ld	r24, Z+
    111e:	7f 01       	movw	r14, r30
    1120:	88 23       	and	r24, r24
    1122:	09 f4       	brne	.+2      	; 0x1126 <vfprintf+0x3a>
    1124:	ba c1       	rjmp	.+884    	; 0x149a <vfprintf+0x3ae>
    1126:	85 32       	cpi	r24, 0x25	; 37
    1128:	39 f4       	brne	.+14     	; 0x1138 <vfprintf+0x4c>
    112a:	93 fd       	sbrc	r25, 3
    112c:	85 91       	lpm	r24, Z+
    112e:	93 ff       	sbrs	r25, 3
    1130:	81 91       	ld	r24, Z+
    1132:	7f 01       	movw	r14, r30
    1134:	85 32       	cpi	r24, 0x25	; 37
    1136:	29 f4       	brne	.+10     	; 0x1142 <vfprintf+0x56>
    1138:	b6 01       	movw	r22, r12
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    1140:	e7 cf       	rjmp	.-50     	; 0x1110 <vfprintf+0x24>
    1142:	91 2c       	mov	r9, r1
    1144:	21 2c       	mov	r2, r1
    1146:	31 2c       	mov	r3, r1
    1148:	ff e1       	ldi	r31, 0x1F	; 31
    114a:	f3 15       	cp	r31, r3
    114c:	d8 f0       	brcs	.+54     	; 0x1184 <vfprintf+0x98>
    114e:	8b 32       	cpi	r24, 0x2B	; 43
    1150:	79 f0       	breq	.+30     	; 0x1170 <vfprintf+0x84>
    1152:	38 f4       	brcc	.+14     	; 0x1162 <vfprintf+0x76>
    1154:	80 32       	cpi	r24, 0x20	; 32
    1156:	79 f0       	breq	.+30     	; 0x1176 <vfprintf+0x8a>
    1158:	83 32       	cpi	r24, 0x23	; 35
    115a:	a1 f4       	brne	.+40     	; 0x1184 <vfprintf+0x98>
    115c:	23 2d       	mov	r18, r3
    115e:	20 61       	ori	r18, 0x10	; 16
    1160:	1d c0       	rjmp	.+58     	; 0x119c <vfprintf+0xb0>
    1162:	8d 32       	cpi	r24, 0x2D	; 45
    1164:	61 f0       	breq	.+24     	; 0x117e <vfprintf+0x92>
    1166:	80 33       	cpi	r24, 0x30	; 48
    1168:	69 f4       	brne	.+26     	; 0x1184 <vfprintf+0x98>
    116a:	23 2d       	mov	r18, r3
    116c:	21 60       	ori	r18, 0x01	; 1
    116e:	16 c0       	rjmp	.+44     	; 0x119c <vfprintf+0xb0>
    1170:	83 2d       	mov	r24, r3
    1172:	82 60       	ori	r24, 0x02	; 2
    1174:	38 2e       	mov	r3, r24
    1176:	e3 2d       	mov	r30, r3
    1178:	e4 60       	ori	r30, 0x04	; 4
    117a:	3e 2e       	mov	r3, r30
    117c:	2a c0       	rjmp	.+84     	; 0x11d2 <vfprintf+0xe6>
    117e:	f3 2d       	mov	r31, r3
    1180:	f8 60       	ori	r31, 0x08	; 8
    1182:	1d c0       	rjmp	.+58     	; 0x11be <vfprintf+0xd2>
    1184:	37 fc       	sbrc	r3, 7
    1186:	2d c0       	rjmp	.+90     	; 0x11e2 <vfprintf+0xf6>
    1188:	20 ed       	ldi	r18, 0xD0	; 208
    118a:	28 0f       	add	r18, r24
    118c:	2a 30       	cpi	r18, 0x0A	; 10
    118e:	40 f0       	brcs	.+16     	; 0x11a0 <vfprintf+0xb4>
    1190:	8e 32       	cpi	r24, 0x2E	; 46
    1192:	b9 f4       	brne	.+46     	; 0x11c2 <vfprintf+0xd6>
    1194:	36 fc       	sbrc	r3, 6
    1196:	81 c1       	rjmp	.+770    	; 0x149a <vfprintf+0x3ae>
    1198:	23 2d       	mov	r18, r3
    119a:	20 64       	ori	r18, 0x40	; 64
    119c:	32 2e       	mov	r3, r18
    119e:	19 c0       	rjmp	.+50     	; 0x11d2 <vfprintf+0xe6>
    11a0:	36 fe       	sbrs	r3, 6
    11a2:	06 c0       	rjmp	.+12     	; 0x11b0 <vfprintf+0xc4>
    11a4:	8a e0       	ldi	r24, 0x0A	; 10
    11a6:	98 9e       	mul	r9, r24
    11a8:	20 0d       	add	r18, r0
    11aa:	11 24       	eor	r1, r1
    11ac:	92 2e       	mov	r9, r18
    11ae:	11 c0       	rjmp	.+34     	; 0x11d2 <vfprintf+0xe6>
    11b0:	ea e0       	ldi	r30, 0x0A	; 10
    11b2:	2e 9e       	mul	r2, r30
    11b4:	20 0d       	add	r18, r0
    11b6:	11 24       	eor	r1, r1
    11b8:	22 2e       	mov	r2, r18
    11ba:	f3 2d       	mov	r31, r3
    11bc:	f0 62       	ori	r31, 0x20	; 32
    11be:	3f 2e       	mov	r3, r31
    11c0:	08 c0       	rjmp	.+16     	; 0x11d2 <vfprintf+0xe6>
    11c2:	8c 36       	cpi	r24, 0x6C	; 108
    11c4:	21 f4       	brne	.+8      	; 0x11ce <vfprintf+0xe2>
    11c6:	83 2d       	mov	r24, r3
    11c8:	80 68       	ori	r24, 0x80	; 128
    11ca:	38 2e       	mov	r3, r24
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <vfprintf+0xe6>
    11ce:	88 36       	cpi	r24, 0x68	; 104
    11d0:	41 f4       	brne	.+16     	; 0x11e2 <vfprintf+0xf6>
    11d2:	f7 01       	movw	r30, r14
    11d4:	93 fd       	sbrc	r25, 3
    11d6:	85 91       	lpm	r24, Z+
    11d8:	93 ff       	sbrs	r25, 3
    11da:	81 91       	ld	r24, Z+
    11dc:	7f 01       	movw	r14, r30
    11de:	81 11       	cpse	r24, r1
    11e0:	b3 cf       	rjmp	.-154    	; 0x1148 <vfprintf+0x5c>
    11e2:	98 2f       	mov	r25, r24
    11e4:	9f 7d       	andi	r25, 0xDF	; 223
    11e6:	95 54       	subi	r25, 0x45	; 69
    11e8:	93 30       	cpi	r25, 0x03	; 3
    11ea:	28 f4       	brcc	.+10     	; 0x11f6 <vfprintf+0x10a>
    11ec:	0c 5f       	subi	r16, 0xFC	; 252
    11ee:	1f 4f       	sbci	r17, 0xFF	; 255
    11f0:	9f e3       	ldi	r25, 0x3F	; 63
    11f2:	99 83       	std	Y+1, r25	; 0x01
    11f4:	0d c0       	rjmp	.+26     	; 0x1210 <vfprintf+0x124>
    11f6:	83 36       	cpi	r24, 0x63	; 99
    11f8:	31 f0       	breq	.+12     	; 0x1206 <vfprintf+0x11a>
    11fa:	83 37       	cpi	r24, 0x73	; 115
    11fc:	71 f0       	breq	.+28     	; 0x121a <vfprintf+0x12e>
    11fe:	83 35       	cpi	r24, 0x53	; 83
    1200:	09 f0       	breq	.+2      	; 0x1204 <vfprintf+0x118>
    1202:	59 c0       	rjmp	.+178    	; 0x12b6 <vfprintf+0x1ca>
    1204:	21 c0       	rjmp	.+66     	; 0x1248 <vfprintf+0x15c>
    1206:	f8 01       	movw	r30, r16
    1208:	80 81       	ld	r24, Z
    120a:	89 83       	std	Y+1, r24	; 0x01
    120c:	0e 5f       	subi	r16, 0xFE	; 254
    120e:	1f 4f       	sbci	r17, 0xFF	; 255
    1210:	88 24       	eor	r8, r8
    1212:	83 94       	inc	r8
    1214:	91 2c       	mov	r9, r1
    1216:	53 01       	movw	r10, r6
    1218:	13 c0       	rjmp	.+38     	; 0x1240 <vfprintf+0x154>
    121a:	28 01       	movw	r4, r16
    121c:	f2 e0       	ldi	r31, 0x02	; 2
    121e:	4f 0e       	add	r4, r31
    1220:	51 1c       	adc	r5, r1
    1222:	f8 01       	movw	r30, r16
    1224:	a0 80       	ld	r10, Z
    1226:	b1 80       	ldd	r11, Z+1	; 0x01
    1228:	36 fe       	sbrs	r3, 6
    122a:	03 c0       	rjmp	.+6      	; 0x1232 <vfprintf+0x146>
    122c:	69 2d       	mov	r22, r9
    122e:	70 e0       	ldi	r23, 0x00	; 0
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <vfprintf+0x14a>
    1232:	6f ef       	ldi	r22, 0xFF	; 255
    1234:	7f ef       	ldi	r23, 0xFF	; 255
    1236:	c5 01       	movw	r24, r10
    1238:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <strnlen>
    123c:	4c 01       	movw	r8, r24
    123e:	82 01       	movw	r16, r4
    1240:	f3 2d       	mov	r31, r3
    1242:	ff 77       	andi	r31, 0x7F	; 127
    1244:	3f 2e       	mov	r3, r31
    1246:	16 c0       	rjmp	.+44     	; 0x1274 <vfprintf+0x188>
    1248:	28 01       	movw	r4, r16
    124a:	22 e0       	ldi	r18, 0x02	; 2
    124c:	42 0e       	add	r4, r18
    124e:	51 1c       	adc	r5, r1
    1250:	f8 01       	movw	r30, r16
    1252:	a0 80       	ld	r10, Z
    1254:	b1 80       	ldd	r11, Z+1	; 0x01
    1256:	36 fe       	sbrs	r3, 6
    1258:	03 c0       	rjmp	.+6      	; 0x1260 <vfprintf+0x174>
    125a:	69 2d       	mov	r22, r9
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	02 c0       	rjmp	.+4      	; 0x1264 <vfprintf+0x178>
    1260:	6f ef       	ldi	r22, 0xFF	; 255
    1262:	7f ef       	ldi	r23, 0xFF	; 255
    1264:	c5 01       	movw	r24, r10
    1266:	0e 94 57 0a 	call	0x14ae	; 0x14ae <strnlen_P>
    126a:	4c 01       	movw	r8, r24
    126c:	f3 2d       	mov	r31, r3
    126e:	f0 68       	ori	r31, 0x80	; 128
    1270:	3f 2e       	mov	r3, r31
    1272:	82 01       	movw	r16, r4
    1274:	33 fc       	sbrc	r3, 3
    1276:	1b c0       	rjmp	.+54     	; 0x12ae <vfprintf+0x1c2>
    1278:	82 2d       	mov	r24, r2
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	88 16       	cp	r8, r24
    127e:	99 06       	cpc	r9, r25
    1280:	b0 f4       	brcc	.+44     	; 0x12ae <vfprintf+0x1c2>
    1282:	b6 01       	movw	r22, r12
    1284:	80 e2       	ldi	r24, 0x20	; 32
    1286:	90 e0       	ldi	r25, 0x00	; 0
    1288:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    128c:	2a 94       	dec	r2
    128e:	f4 cf       	rjmp	.-24     	; 0x1278 <vfprintf+0x18c>
    1290:	f5 01       	movw	r30, r10
    1292:	37 fc       	sbrc	r3, 7
    1294:	85 91       	lpm	r24, Z+
    1296:	37 fe       	sbrs	r3, 7
    1298:	81 91       	ld	r24, Z+
    129a:	5f 01       	movw	r10, r30
    129c:	b6 01       	movw	r22, r12
    129e:	90 e0       	ldi	r25, 0x00	; 0
    12a0:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    12a4:	21 10       	cpse	r2, r1
    12a6:	2a 94       	dec	r2
    12a8:	21 e0       	ldi	r18, 0x01	; 1
    12aa:	82 1a       	sub	r8, r18
    12ac:	91 08       	sbc	r9, r1
    12ae:	81 14       	cp	r8, r1
    12b0:	91 04       	cpc	r9, r1
    12b2:	71 f7       	brne	.-36     	; 0x1290 <vfprintf+0x1a4>
    12b4:	e8 c0       	rjmp	.+464    	; 0x1486 <vfprintf+0x39a>
    12b6:	84 36       	cpi	r24, 0x64	; 100
    12b8:	11 f0       	breq	.+4      	; 0x12be <vfprintf+0x1d2>
    12ba:	89 36       	cpi	r24, 0x69	; 105
    12bc:	41 f5       	brne	.+80     	; 0x130e <vfprintf+0x222>
    12be:	f8 01       	movw	r30, r16
    12c0:	37 fe       	sbrs	r3, 7
    12c2:	07 c0       	rjmp	.+14     	; 0x12d2 <vfprintf+0x1e6>
    12c4:	60 81       	ld	r22, Z
    12c6:	71 81       	ldd	r23, Z+1	; 0x01
    12c8:	82 81       	ldd	r24, Z+2	; 0x02
    12ca:	93 81       	ldd	r25, Z+3	; 0x03
    12cc:	0c 5f       	subi	r16, 0xFC	; 252
    12ce:	1f 4f       	sbci	r17, 0xFF	; 255
    12d0:	08 c0       	rjmp	.+16     	; 0x12e2 <vfprintf+0x1f6>
    12d2:	60 81       	ld	r22, Z
    12d4:	71 81       	ldd	r23, Z+1	; 0x01
    12d6:	07 2e       	mov	r0, r23
    12d8:	00 0c       	add	r0, r0
    12da:	88 0b       	sbc	r24, r24
    12dc:	99 0b       	sbc	r25, r25
    12de:	0e 5f       	subi	r16, 0xFE	; 254
    12e0:	1f 4f       	sbci	r17, 0xFF	; 255
    12e2:	f3 2d       	mov	r31, r3
    12e4:	ff 76       	andi	r31, 0x6F	; 111
    12e6:	3f 2e       	mov	r3, r31
    12e8:	97 ff       	sbrs	r25, 7
    12ea:	09 c0       	rjmp	.+18     	; 0x12fe <vfprintf+0x212>
    12ec:	90 95       	com	r25
    12ee:	80 95       	com	r24
    12f0:	70 95       	com	r23
    12f2:	61 95       	neg	r22
    12f4:	7f 4f       	sbci	r23, 0xFF	; 255
    12f6:	8f 4f       	sbci	r24, 0xFF	; 255
    12f8:	9f 4f       	sbci	r25, 0xFF	; 255
    12fa:	f0 68       	ori	r31, 0x80	; 128
    12fc:	3f 2e       	mov	r3, r31
    12fe:	2a e0       	ldi	r18, 0x0A	; 10
    1300:	30 e0       	ldi	r19, 0x00	; 0
    1302:	a3 01       	movw	r20, r6
    1304:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__ultoa_invert>
    1308:	88 2e       	mov	r8, r24
    130a:	86 18       	sub	r8, r6
    130c:	45 c0       	rjmp	.+138    	; 0x1398 <vfprintf+0x2ac>
    130e:	85 37       	cpi	r24, 0x75	; 117
    1310:	31 f4       	brne	.+12     	; 0x131e <vfprintf+0x232>
    1312:	23 2d       	mov	r18, r3
    1314:	2f 7e       	andi	r18, 0xEF	; 239
    1316:	b2 2e       	mov	r11, r18
    1318:	2a e0       	ldi	r18, 0x0A	; 10
    131a:	30 e0       	ldi	r19, 0x00	; 0
    131c:	25 c0       	rjmp	.+74     	; 0x1368 <vfprintf+0x27c>
    131e:	93 2d       	mov	r25, r3
    1320:	99 7f       	andi	r25, 0xF9	; 249
    1322:	b9 2e       	mov	r11, r25
    1324:	8f 36       	cpi	r24, 0x6F	; 111
    1326:	c1 f0       	breq	.+48     	; 0x1358 <vfprintf+0x26c>
    1328:	18 f4       	brcc	.+6      	; 0x1330 <vfprintf+0x244>
    132a:	88 35       	cpi	r24, 0x58	; 88
    132c:	79 f0       	breq	.+30     	; 0x134c <vfprintf+0x260>
    132e:	b5 c0       	rjmp	.+362    	; 0x149a <vfprintf+0x3ae>
    1330:	80 37       	cpi	r24, 0x70	; 112
    1332:	19 f0       	breq	.+6      	; 0x133a <vfprintf+0x24e>
    1334:	88 37       	cpi	r24, 0x78	; 120
    1336:	21 f0       	breq	.+8      	; 0x1340 <vfprintf+0x254>
    1338:	b0 c0       	rjmp	.+352    	; 0x149a <vfprintf+0x3ae>
    133a:	e9 2f       	mov	r30, r25
    133c:	e0 61       	ori	r30, 0x10	; 16
    133e:	be 2e       	mov	r11, r30
    1340:	b4 fe       	sbrs	r11, 4
    1342:	0d c0       	rjmp	.+26     	; 0x135e <vfprintf+0x272>
    1344:	fb 2d       	mov	r31, r11
    1346:	f4 60       	ori	r31, 0x04	; 4
    1348:	bf 2e       	mov	r11, r31
    134a:	09 c0       	rjmp	.+18     	; 0x135e <vfprintf+0x272>
    134c:	34 fe       	sbrs	r3, 4
    134e:	0a c0       	rjmp	.+20     	; 0x1364 <vfprintf+0x278>
    1350:	29 2f       	mov	r18, r25
    1352:	26 60       	ori	r18, 0x06	; 6
    1354:	b2 2e       	mov	r11, r18
    1356:	06 c0       	rjmp	.+12     	; 0x1364 <vfprintf+0x278>
    1358:	28 e0       	ldi	r18, 0x08	; 8
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	05 c0       	rjmp	.+10     	; 0x1368 <vfprintf+0x27c>
    135e:	20 e1       	ldi	r18, 0x10	; 16
    1360:	30 e0       	ldi	r19, 0x00	; 0
    1362:	02 c0       	rjmp	.+4      	; 0x1368 <vfprintf+0x27c>
    1364:	20 e1       	ldi	r18, 0x10	; 16
    1366:	32 e0       	ldi	r19, 0x02	; 2
    1368:	f8 01       	movw	r30, r16
    136a:	b7 fe       	sbrs	r11, 7
    136c:	07 c0       	rjmp	.+14     	; 0x137c <vfprintf+0x290>
    136e:	60 81       	ld	r22, Z
    1370:	71 81       	ldd	r23, Z+1	; 0x01
    1372:	82 81       	ldd	r24, Z+2	; 0x02
    1374:	93 81       	ldd	r25, Z+3	; 0x03
    1376:	0c 5f       	subi	r16, 0xFC	; 252
    1378:	1f 4f       	sbci	r17, 0xFF	; 255
    137a:	06 c0       	rjmp	.+12     	; 0x1388 <vfprintf+0x29c>
    137c:	60 81       	ld	r22, Z
    137e:	71 81       	ldd	r23, Z+1	; 0x01
    1380:	80 e0       	ldi	r24, 0x00	; 0
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	0e 5f       	subi	r16, 0xFE	; 254
    1386:	1f 4f       	sbci	r17, 0xFF	; 255
    1388:	a3 01       	movw	r20, r6
    138a:	0e 94 a9 0a 	call	0x1552	; 0x1552 <__ultoa_invert>
    138e:	88 2e       	mov	r8, r24
    1390:	86 18       	sub	r8, r6
    1392:	fb 2d       	mov	r31, r11
    1394:	ff 77       	andi	r31, 0x7F	; 127
    1396:	3f 2e       	mov	r3, r31
    1398:	36 fe       	sbrs	r3, 6
    139a:	0d c0       	rjmp	.+26     	; 0x13b6 <vfprintf+0x2ca>
    139c:	23 2d       	mov	r18, r3
    139e:	2e 7f       	andi	r18, 0xFE	; 254
    13a0:	a2 2e       	mov	r10, r18
    13a2:	89 14       	cp	r8, r9
    13a4:	58 f4       	brcc	.+22     	; 0x13bc <vfprintf+0x2d0>
    13a6:	34 fe       	sbrs	r3, 4
    13a8:	0b c0       	rjmp	.+22     	; 0x13c0 <vfprintf+0x2d4>
    13aa:	32 fc       	sbrc	r3, 2
    13ac:	09 c0       	rjmp	.+18     	; 0x13c0 <vfprintf+0x2d4>
    13ae:	83 2d       	mov	r24, r3
    13b0:	8e 7e       	andi	r24, 0xEE	; 238
    13b2:	a8 2e       	mov	r10, r24
    13b4:	05 c0       	rjmp	.+10     	; 0x13c0 <vfprintf+0x2d4>
    13b6:	b8 2c       	mov	r11, r8
    13b8:	a3 2c       	mov	r10, r3
    13ba:	03 c0       	rjmp	.+6      	; 0x13c2 <vfprintf+0x2d6>
    13bc:	b8 2c       	mov	r11, r8
    13be:	01 c0       	rjmp	.+2      	; 0x13c2 <vfprintf+0x2d6>
    13c0:	b9 2c       	mov	r11, r9
    13c2:	a4 fe       	sbrs	r10, 4
    13c4:	0f c0       	rjmp	.+30     	; 0x13e4 <vfprintf+0x2f8>
    13c6:	fe 01       	movw	r30, r28
    13c8:	e8 0d       	add	r30, r8
    13ca:	f1 1d       	adc	r31, r1
    13cc:	80 81       	ld	r24, Z
    13ce:	80 33       	cpi	r24, 0x30	; 48
    13d0:	21 f4       	brne	.+8      	; 0x13da <vfprintf+0x2ee>
    13d2:	9a 2d       	mov	r25, r10
    13d4:	99 7e       	andi	r25, 0xE9	; 233
    13d6:	a9 2e       	mov	r10, r25
    13d8:	09 c0       	rjmp	.+18     	; 0x13ec <vfprintf+0x300>
    13da:	a2 fe       	sbrs	r10, 2
    13dc:	06 c0       	rjmp	.+12     	; 0x13ea <vfprintf+0x2fe>
    13de:	b3 94       	inc	r11
    13e0:	b3 94       	inc	r11
    13e2:	04 c0       	rjmp	.+8      	; 0x13ec <vfprintf+0x300>
    13e4:	8a 2d       	mov	r24, r10
    13e6:	86 78       	andi	r24, 0x86	; 134
    13e8:	09 f0       	breq	.+2      	; 0x13ec <vfprintf+0x300>
    13ea:	b3 94       	inc	r11
    13ec:	a3 fc       	sbrc	r10, 3
    13ee:	11 c0       	rjmp	.+34     	; 0x1412 <vfprintf+0x326>
    13f0:	a0 fe       	sbrs	r10, 0
    13f2:	06 c0       	rjmp	.+12     	; 0x1400 <vfprintf+0x314>
    13f4:	b2 14       	cp	r11, r2
    13f6:	88 f4       	brcc	.+34     	; 0x141a <vfprintf+0x32e>
    13f8:	28 0c       	add	r2, r8
    13fa:	92 2c       	mov	r9, r2
    13fc:	9b 18       	sub	r9, r11
    13fe:	0e c0       	rjmp	.+28     	; 0x141c <vfprintf+0x330>
    1400:	b2 14       	cp	r11, r2
    1402:	60 f4       	brcc	.+24     	; 0x141c <vfprintf+0x330>
    1404:	b6 01       	movw	r22, r12
    1406:	80 e2       	ldi	r24, 0x20	; 32
    1408:	90 e0       	ldi	r25, 0x00	; 0
    140a:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    140e:	b3 94       	inc	r11
    1410:	f7 cf       	rjmp	.-18     	; 0x1400 <vfprintf+0x314>
    1412:	b2 14       	cp	r11, r2
    1414:	18 f4       	brcc	.+6      	; 0x141c <vfprintf+0x330>
    1416:	2b 18       	sub	r2, r11
    1418:	02 c0       	rjmp	.+4      	; 0x141e <vfprintf+0x332>
    141a:	98 2c       	mov	r9, r8
    141c:	21 2c       	mov	r2, r1
    141e:	a4 fe       	sbrs	r10, 4
    1420:	10 c0       	rjmp	.+32     	; 0x1442 <vfprintf+0x356>
    1422:	b6 01       	movw	r22, r12
    1424:	80 e3       	ldi	r24, 0x30	; 48
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    142c:	a2 fe       	sbrs	r10, 2
    142e:	17 c0       	rjmp	.+46     	; 0x145e <vfprintf+0x372>
    1430:	a1 fc       	sbrc	r10, 1
    1432:	03 c0       	rjmp	.+6      	; 0x143a <vfprintf+0x34e>
    1434:	88 e7       	ldi	r24, 0x78	; 120
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	02 c0       	rjmp	.+4      	; 0x143e <vfprintf+0x352>
    143a:	88 e5       	ldi	r24, 0x58	; 88
    143c:	90 e0       	ldi	r25, 0x00	; 0
    143e:	b6 01       	movw	r22, r12
    1440:	0c c0       	rjmp	.+24     	; 0x145a <vfprintf+0x36e>
    1442:	8a 2d       	mov	r24, r10
    1444:	86 78       	andi	r24, 0x86	; 134
    1446:	59 f0       	breq	.+22     	; 0x145e <vfprintf+0x372>
    1448:	a1 fe       	sbrs	r10, 1
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <vfprintf+0x364>
    144c:	8b e2       	ldi	r24, 0x2B	; 43
    144e:	01 c0       	rjmp	.+2      	; 0x1452 <vfprintf+0x366>
    1450:	80 e2       	ldi	r24, 0x20	; 32
    1452:	a7 fc       	sbrc	r10, 7
    1454:	8d e2       	ldi	r24, 0x2D	; 45
    1456:	b6 01       	movw	r22, r12
    1458:	90 e0       	ldi	r25, 0x00	; 0
    145a:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    145e:	89 14       	cp	r8, r9
    1460:	38 f4       	brcc	.+14     	; 0x1470 <vfprintf+0x384>
    1462:	b6 01       	movw	r22, r12
    1464:	80 e3       	ldi	r24, 0x30	; 48
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    146c:	9a 94       	dec	r9
    146e:	f7 cf       	rjmp	.-18     	; 0x145e <vfprintf+0x372>
    1470:	8a 94       	dec	r8
    1472:	f3 01       	movw	r30, r6
    1474:	e8 0d       	add	r30, r8
    1476:	f1 1d       	adc	r31, r1
    1478:	80 81       	ld	r24, Z
    147a:	b6 01       	movw	r22, r12
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    1482:	81 10       	cpse	r8, r1
    1484:	f5 cf       	rjmp	.-22     	; 0x1470 <vfprintf+0x384>
    1486:	22 20       	and	r2, r2
    1488:	09 f4       	brne	.+2      	; 0x148c <vfprintf+0x3a0>
    148a:	42 ce       	rjmp	.-892    	; 0x1110 <vfprintf+0x24>
    148c:	b6 01       	movw	r22, r12
    148e:	80 e2       	ldi	r24, 0x20	; 32
    1490:	90 e0       	ldi	r25, 0x00	; 0
    1492:	0e 94 6d 0a 	call	0x14da	; 0x14da <fputc>
    1496:	2a 94       	dec	r2
    1498:	f6 cf       	rjmp	.-20     	; 0x1486 <vfprintf+0x39a>
    149a:	f6 01       	movw	r30, r12
    149c:	86 81       	ldd	r24, Z+6	; 0x06
    149e:	97 81       	ldd	r25, Z+7	; 0x07
    14a0:	02 c0       	rjmp	.+4      	; 0x14a6 <vfprintf+0x3ba>
    14a2:	8f ef       	ldi	r24, 0xFF	; 255
    14a4:	9f ef       	ldi	r25, 0xFF	; 255
    14a6:	2b 96       	adiw	r28, 0x0b	; 11
    14a8:	e2 e1       	ldi	r30, 0x12	; 18
    14aa:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__epilogue_restores__>

000014ae <strnlen_P>:
    14ae:	fc 01       	movw	r30, r24
    14b0:	05 90       	lpm	r0, Z+
    14b2:	61 50       	subi	r22, 0x01	; 1
    14b4:	70 40       	sbci	r23, 0x00	; 0
    14b6:	01 10       	cpse	r0, r1
    14b8:	d8 f7       	brcc	.-10     	; 0x14b0 <strnlen_P+0x2>
    14ba:	80 95       	com	r24
    14bc:	90 95       	com	r25
    14be:	8e 0f       	add	r24, r30
    14c0:	9f 1f       	adc	r25, r31
    14c2:	08 95       	ret

000014c4 <strnlen>:
    14c4:	fc 01       	movw	r30, r24
    14c6:	61 50       	subi	r22, 0x01	; 1
    14c8:	70 40       	sbci	r23, 0x00	; 0
    14ca:	01 90       	ld	r0, Z+
    14cc:	01 10       	cpse	r0, r1
    14ce:	d8 f7       	brcc	.-10     	; 0x14c6 <strnlen+0x2>
    14d0:	80 95       	com	r24
    14d2:	90 95       	com	r25
    14d4:	8e 0f       	add	r24, r30
    14d6:	9f 1f       	adc	r25, r31
    14d8:	08 95       	ret

000014da <fputc>:
    14da:	0f 93       	push	r16
    14dc:	1f 93       	push	r17
    14de:	cf 93       	push	r28
    14e0:	df 93       	push	r29
    14e2:	fb 01       	movw	r30, r22
    14e4:	23 81       	ldd	r18, Z+3	; 0x03
    14e6:	21 fd       	sbrc	r18, 1
    14e8:	03 c0       	rjmp	.+6      	; 0x14f0 <fputc+0x16>
    14ea:	8f ef       	ldi	r24, 0xFF	; 255
    14ec:	9f ef       	ldi	r25, 0xFF	; 255
    14ee:	2c c0       	rjmp	.+88     	; 0x1548 <fputc+0x6e>
    14f0:	22 ff       	sbrs	r18, 2
    14f2:	16 c0       	rjmp	.+44     	; 0x1520 <fputc+0x46>
    14f4:	46 81       	ldd	r20, Z+6	; 0x06
    14f6:	57 81       	ldd	r21, Z+7	; 0x07
    14f8:	24 81       	ldd	r18, Z+4	; 0x04
    14fa:	35 81       	ldd	r19, Z+5	; 0x05
    14fc:	42 17       	cp	r20, r18
    14fe:	53 07       	cpc	r21, r19
    1500:	44 f4       	brge	.+16     	; 0x1512 <fputc+0x38>
    1502:	a0 81       	ld	r26, Z
    1504:	b1 81       	ldd	r27, Z+1	; 0x01
    1506:	9d 01       	movw	r18, r26
    1508:	2f 5f       	subi	r18, 0xFF	; 255
    150a:	3f 4f       	sbci	r19, 0xFF	; 255
    150c:	31 83       	std	Z+1, r19	; 0x01
    150e:	20 83       	st	Z, r18
    1510:	8c 93       	st	X, r24
    1512:	26 81       	ldd	r18, Z+6	; 0x06
    1514:	37 81       	ldd	r19, Z+7	; 0x07
    1516:	2f 5f       	subi	r18, 0xFF	; 255
    1518:	3f 4f       	sbci	r19, 0xFF	; 255
    151a:	37 83       	std	Z+7, r19	; 0x07
    151c:	26 83       	std	Z+6, r18	; 0x06
    151e:	14 c0       	rjmp	.+40     	; 0x1548 <fputc+0x6e>
    1520:	8b 01       	movw	r16, r22
    1522:	ec 01       	movw	r28, r24
    1524:	fb 01       	movw	r30, r22
    1526:	00 84       	ldd	r0, Z+8	; 0x08
    1528:	f1 85       	ldd	r31, Z+9	; 0x09
    152a:	e0 2d       	mov	r30, r0
    152c:	09 95       	icall
    152e:	89 2b       	or	r24, r25
    1530:	e1 f6       	brne	.-72     	; 0x14ea <fputc+0x10>
    1532:	d8 01       	movw	r26, r16
    1534:	16 96       	adiw	r26, 0x06	; 6
    1536:	8d 91       	ld	r24, X+
    1538:	9c 91       	ld	r25, X
    153a:	17 97       	sbiw	r26, 0x07	; 7
    153c:	01 96       	adiw	r24, 0x01	; 1
    153e:	17 96       	adiw	r26, 0x07	; 7
    1540:	9c 93       	st	X, r25
    1542:	8e 93       	st	-X, r24
    1544:	16 97       	sbiw	r26, 0x06	; 6
    1546:	ce 01       	movw	r24, r28
    1548:	df 91       	pop	r29
    154a:	cf 91       	pop	r28
    154c:	1f 91       	pop	r17
    154e:	0f 91       	pop	r16
    1550:	08 95       	ret

00001552 <__ultoa_invert>:
    1552:	fa 01       	movw	r30, r20
    1554:	aa 27       	eor	r26, r26
    1556:	28 30       	cpi	r18, 0x08	; 8
    1558:	51 f1       	breq	.+84     	; 0x15ae <__ultoa_invert+0x5c>
    155a:	20 31       	cpi	r18, 0x10	; 16
    155c:	81 f1       	breq	.+96     	; 0x15be <__ultoa_invert+0x6c>
    155e:	e8 94       	clt
    1560:	6f 93       	push	r22
    1562:	6e 7f       	andi	r22, 0xFE	; 254
    1564:	6e 5f       	subi	r22, 0xFE	; 254
    1566:	7f 4f       	sbci	r23, 0xFF	; 255
    1568:	8f 4f       	sbci	r24, 0xFF	; 255
    156a:	9f 4f       	sbci	r25, 0xFF	; 255
    156c:	af 4f       	sbci	r26, 0xFF	; 255
    156e:	b1 e0       	ldi	r27, 0x01	; 1
    1570:	3e d0       	rcall	.+124    	; 0x15ee <__ultoa_invert+0x9c>
    1572:	b4 e0       	ldi	r27, 0x04	; 4
    1574:	3c d0       	rcall	.+120    	; 0x15ee <__ultoa_invert+0x9c>
    1576:	67 0f       	add	r22, r23
    1578:	78 1f       	adc	r23, r24
    157a:	89 1f       	adc	r24, r25
    157c:	9a 1f       	adc	r25, r26
    157e:	a1 1d       	adc	r26, r1
    1580:	68 0f       	add	r22, r24
    1582:	79 1f       	adc	r23, r25
    1584:	8a 1f       	adc	r24, r26
    1586:	91 1d       	adc	r25, r1
    1588:	a1 1d       	adc	r26, r1
    158a:	6a 0f       	add	r22, r26
    158c:	71 1d       	adc	r23, r1
    158e:	81 1d       	adc	r24, r1
    1590:	91 1d       	adc	r25, r1
    1592:	a1 1d       	adc	r26, r1
    1594:	20 d0       	rcall	.+64     	; 0x15d6 <__ultoa_invert+0x84>
    1596:	09 f4       	brne	.+2      	; 0x159a <__ultoa_invert+0x48>
    1598:	68 94       	set
    159a:	3f 91       	pop	r19
    159c:	2a e0       	ldi	r18, 0x0A	; 10
    159e:	26 9f       	mul	r18, r22
    15a0:	11 24       	eor	r1, r1
    15a2:	30 19       	sub	r19, r0
    15a4:	30 5d       	subi	r19, 0xD0	; 208
    15a6:	31 93       	st	Z+, r19
    15a8:	de f6       	brtc	.-74     	; 0x1560 <__ultoa_invert+0xe>
    15aa:	cf 01       	movw	r24, r30
    15ac:	08 95       	ret
    15ae:	46 2f       	mov	r20, r22
    15b0:	47 70       	andi	r20, 0x07	; 7
    15b2:	40 5d       	subi	r20, 0xD0	; 208
    15b4:	41 93       	st	Z+, r20
    15b6:	b3 e0       	ldi	r27, 0x03	; 3
    15b8:	0f d0       	rcall	.+30     	; 0x15d8 <__ultoa_invert+0x86>
    15ba:	c9 f7       	brne	.-14     	; 0x15ae <__ultoa_invert+0x5c>
    15bc:	f6 cf       	rjmp	.-20     	; 0x15aa <__ultoa_invert+0x58>
    15be:	46 2f       	mov	r20, r22
    15c0:	4f 70       	andi	r20, 0x0F	; 15
    15c2:	40 5d       	subi	r20, 0xD0	; 208
    15c4:	4a 33       	cpi	r20, 0x3A	; 58
    15c6:	18 f0       	brcs	.+6      	; 0x15ce <__ultoa_invert+0x7c>
    15c8:	49 5d       	subi	r20, 0xD9	; 217
    15ca:	31 fd       	sbrc	r19, 1
    15cc:	40 52       	subi	r20, 0x20	; 32
    15ce:	41 93       	st	Z+, r20
    15d0:	02 d0       	rcall	.+4      	; 0x15d6 <__ultoa_invert+0x84>
    15d2:	a9 f7       	brne	.-22     	; 0x15be <__ultoa_invert+0x6c>
    15d4:	ea cf       	rjmp	.-44     	; 0x15aa <__ultoa_invert+0x58>
    15d6:	b4 e0       	ldi	r27, 0x04	; 4
    15d8:	a6 95       	lsr	r26
    15da:	97 95       	ror	r25
    15dc:	87 95       	ror	r24
    15de:	77 95       	ror	r23
    15e0:	67 95       	ror	r22
    15e2:	ba 95       	dec	r27
    15e4:	c9 f7       	brne	.-14     	; 0x15d8 <__ultoa_invert+0x86>
    15e6:	00 97       	sbiw	r24, 0x00	; 0
    15e8:	61 05       	cpc	r22, r1
    15ea:	71 05       	cpc	r23, r1
    15ec:	08 95       	ret
    15ee:	9b 01       	movw	r18, r22
    15f0:	ac 01       	movw	r20, r24
    15f2:	0a 2e       	mov	r0, r26
    15f4:	06 94       	lsr	r0
    15f6:	57 95       	ror	r21
    15f8:	47 95       	ror	r20
    15fa:	37 95       	ror	r19
    15fc:	27 95       	ror	r18
    15fe:	ba 95       	dec	r27
    1600:	c9 f7       	brne	.-14     	; 0x15f4 <__ultoa_invert+0xa2>
    1602:	62 0f       	add	r22, r18
    1604:	73 1f       	adc	r23, r19
    1606:	84 1f       	adc	r24, r20
    1608:	95 1f       	adc	r25, r21
    160a:	a0 1d       	adc	r26, r0
    160c:	08 95       	ret

0000160e <__prologue_saves__>:
    160e:	2f 92       	push	r2
    1610:	3f 92       	push	r3
    1612:	4f 92       	push	r4
    1614:	5f 92       	push	r5
    1616:	6f 92       	push	r6
    1618:	7f 92       	push	r7
    161a:	8f 92       	push	r8
    161c:	9f 92       	push	r9
    161e:	af 92       	push	r10
    1620:	bf 92       	push	r11
    1622:	cf 92       	push	r12
    1624:	df 92       	push	r13
    1626:	ef 92       	push	r14
    1628:	ff 92       	push	r15
    162a:	0f 93       	push	r16
    162c:	1f 93       	push	r17
    162e:	cf 93       	push	r28
    1630:	df 93       	push	r29
    1632:	cd b7       	in	r28, 0x3d	; 61
    1634:	de b7       	in	r29, 0x3e	; 62
    1636:	ca 1b       	sub	r28, r26
    1638:	db 0b       	sbc	r29, r27
    163a:	0f b6       	in	r0, 0x3f	; 63
    163c:	f8 94       	cli
    163e:	de bf       	out	0x3e, r29	; 62
    1640:	0f be       	out	0x3f, r0	; 63
    1642:	cd bf       	out	0x3d, r28	; 61
    1644:	09 94       	ijmp

00001646 <__epilogue_restores__>:
    1646:	2a 88       	ldd	r2, Y+18	; 0x12
    1648:	39 88       	ldd	r3, Y+17	; 0x11
    164a:	48 88       	ldd	r4, Y+16	; 0x10
    164c:	5f 84       	ldd	r5, Y+15	; 0x0f
    164e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1650:	7d 84       	ldd	r7, Y+13	; 0x0d
    1652:	8c 84       	ldd	r8, Y+12	; 0x0c
    1654:	9b 84       	ldd	r9, Y+11	; 0x0b
    1656:	aa 84       	ldd	r10, Y+10	; 0x0a
    1658:	b9 84       	ldd	r11, Y+9	; 0x09
    165a:	c8 84       	ldd	r12, Y+8	; 0x08
    165c:	df 80       	ldd	r13, Y+7	; 0x07
    165e:	ee 80       	ldd	r14, Y+6	; 0x06
    1660:	fd 80       	ldd	r15, Y+5	; 0x05
    1662:	0c 81       	ldd	r16, Y+4	; 0x04
    1664:	1b 81       	ldd	r17, Y+3	; 0x03
    1666:	aa 81       	ldd	r26, Y+2	; 0x02
    1668:	b9 81       	ldd	r27, Y+1	; 0x01
    166a:	ce 0f       	add	r28, r30
    166c:	d1 1d       	adc	r29, r1
    166e:	0f b6       	in	r0, 0x3f	; 63
    1670:	f8 94       	cli
    1672:	de bf       	out	0x3e, r29	; 62
    1674:	0f be       	out	0x3f, r0	; 63
    1676:	cd bf       	out	0x3d, r28	; 61
    1678:	ed 01       	movw	r28, r26
    167a:	08 95       	ret

0000167c <_exit>:
    167c:	f8 94       	cli

0000167e <__stop_program>:
    167e:	ff cf       	rjmp	.-2      	; 0x167e <__stop_program>
